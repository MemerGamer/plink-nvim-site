[
  {
    "name": "tokiory/neovim-boilerplate",
    "url": "https://github.com/tokiory/neovim-boilerplate",
    "description": "Starter boilerplate for making new configurations.",
    "tags": ["starter templates"],
    "stars": 0
  },
  {
    "name": "frans-johansson/lazy-nvim-starter",
    "url": "https://github.com/frans-johansson/lazy-nvim-starter",
    "description": "Starter boilerplate with lazy plugin manager.",
    "tags": ["starter templates"],
    "stars": 0
  },
  {
    "name": "wbthomason/packer.nvim",
    "url": "https://github.com/wbthomason/packer.nvim",
    "description": "A use-package inspired plugin manager. Uses native packages, supports Luarocks dependencies, written in Lua, allows for expressive config.",
    "tags": ["plugin", "plugin manager"],
    "stars": 0
  },
  {
    "name": "savq/paq-nvim",
    "url": "https://github.com/savq/paq-nvim",
    "description": "Neovim package manager written in Lua.",
    "tags": ["plugin", "plugin manager"],
    "stars": 0
  },
  {
    "name": "NTBBloodbath/cheovim",
    "url": "https://github.com/NTBBloodbath/cheovim",
    "description": "Neovim configuration switcher written in Lua. Inspired by chemacs.",
    "tags": ["plugin", "plugin manager"],
    "stars": 0
  },
  {
    "name": "chiyadev/dep",
    "url": "https://github.com/chiyadev/dep",
    "description": "An alternative to packer.nvim. It was built to be even better and easier to use. Context can be found [here](https://chiya.dev/posts/2021-11-27-why-package-manager).",
    "tags": ["plugin", "plugin manager"],
    "stars": 0
  },
  {
    "name": "folke/lazy.nvim",
    "url": "https://github.com/folke/lazy.nvim",
    "description": "A modern plugin manager, featuring a graphical interface, async execution, a lockfile and more üí§.",
    "tags": ["plugin", "plugin manager"],
    "stars": 1000
  },
  {
    "name": "neovim/nvim-lspconfig",
    "url": "https://github.com/neovim/nvim-lspconfig",
    "description": "Quickstart configurations for the LSP client.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "nvim-lua/lsp-status.nvim",
    "url": "https://github.com/nvim-lua/lsp-status.nvim",
    "description": "This is a plugin/library for generating statusline components from the built-in LSP client.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "RishabhRD/nvim-lsputils",
    "url": "https://github.com/RishabhRD/nvim-lsputils",
    "description": "Better defaults for nvim-lsp actions.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "glepnir/lspsaga.nvim",
    "url": "https://github.com/glepnir/lspsaga.nvim",
    "description": "A light-weight LSP plugin based on Neovim's built-in LSP with a highly performant UI.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "kosayoda/nvim-lightbulb",
    "url": "https://github.com/kosayoda/nvim-lightbulb",
    "description": "The plugin shows a lightbulb in the sign column whenever a `textDocument/codeAction` is available at the current cursor position.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "onsails/lspkind.nvim",
    "url": "https://github.com/onsails/lspkind.nvim",
    "description": "The plugin adds vscode-like icons to Neovim LSP completions.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "ojroques/nvim-lspfuzzy",
    "url": "https://github.com/ojroques/nvim-lspfuzzy",
    "description": "A small plugin to make the LSP client use FZF.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "gfanto/fzf-lsp.nvim",
    "url": "https://github.com/gfanto/fzf-lsp.nvim",
    "description": "Enable the power of FZF fuzzy search for the Neovim built in LSP.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "ray-x/lsp_signature.nvim",
    "url": "https://github.com/ray-x/lsp_signature.nvim",
    "description": "LSP signature hint when you type.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "smjonas/inc-rename.nvim",
    "url": "https://github.com/smjonas/inc-rename.nvim",
    "description": "Provides an incremental LSP rename command based on Neovim's command-preview feature.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "rmagatti/goto-preview",
    "url": "https://github.com/rmagatti/goto-preview",
    "description": "Previewing native LSP's goto definition calls in floating windows.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "jubnzv/virtual-types.nvim",
    "url": "https://github.com/jubnzv/virtual-types.nvim",
    "description": "Show type annotations as virtual text.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "jose-elias-alvarez/typescript.nvim",
    "url": "https://github.com/jose-elias-alvarez/typescript.nvim",
    "description": "Utilities to improve the TypeScript development experience for Neovim's built-in LSP client.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "ray-x/navigator.lua",
    "url": "https://github.com/ray-x/navigator.lua",
    "description": "Learn existing code quickly and navigate code like a breeze. A swiss army knife makes exploring LSP and üå≤Treesitter symbols a piece of üç∞.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "simrat39/symbols-outline.nvim",
    "url": "https://github.com/simrat39/symbols-outline.nvim",
    "description": "A tree like view for symbols using the Language Server Protocol. Supports all your favourite languages.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "stevearc/aerial.nvim",
    "url": "https://github.com/stevearc/aerial.nvim",
    "description": "A code outline window for skimming and quick navigation.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "SmiteshP/nvim-navbuddy",
    "url": "https://github.com/SmiteshP/nvim-navbuddy",
    "description": "A simple popup display that provides breadcrumbs like navigation features using LSP.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "tamago324/nlsp-settings.nvim",
    "url": "https://github.com/tamago324/nlsp-settings.nvim",
    "description": "Setup LSP with JSON or YAML files.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "jose-elias-alvarez/null-ls.nvim",
    "url": "https://github.com/jose-elias-alvarez/null-ls.nvim",
    "description": "Use Neovim as a language server to inject LSP diagnostics, code actions, and more via Lua.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "jakewvincent/texmagic.nvim",
    "url": "https://github.com/jakewvincent/texmagic.nvim",
    "description": "Enhance the lspconfig settings for Texlab by defining any number of custom LaTeX build engines and selecting them with magic comments.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "nanotee/nvim-lsp-basics",
    "url": "https://github.com/nanotee/nvim-lsp-basics",
    "description": "Basic wrappers for LSP features.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "weilbith/nvim-code-action-menu",
    "url": "https://github.com/weilbith/nvim-code-action-menu",
    "description": "A floating pop-up menu for code actions to show code action information and a diff preview.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "mfussenegger/nvim-lint",
    "url": "https://github.com/mfussenegger/nvim-lint",
    "description": "An asynchronous linter plugin, complementary to the built-in Language Server Protocol support.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "b0o/SchemaStore.nvim",
    "url": "https://github.com/b0o/SchemaStore.nvim",
    "description": "Provide access to the [SchemaStore](https://github.com/SchemaStore/schemastore) catalog.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "ldelossa/litee.nvim",
    "url": "https://github.com/ldelossa/litee.nvim",
    "description": "Neovim's missing IDE features.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "j-hui/fidget.nvim",
    "url": "https://github.com/j-hui/fidget.nvim",
    "description": "Standalone UI for LSP progress.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "scalameta/nvim-metals",
    "url": "https://github.com/scalameta/nvim-metals",
    "description": "Neovim plugin for Metals, the Scala language server, using Neovim's builtin LSP.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "junnplus/nvim-lsp-setup",
    "url": "https://github.com/Junnplus/nvim-lsp-setup",
    "description": "A simple wrapper for nvim-lspconfig and nvim-lsp-installer to easily setup LSP servers.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "amrbashir/nvim-docs-view",
    "url": "https://github.com/amrbashir/nvim-docs-view",
    "description": "Display LSP hover documentation in a side panel.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "mfussenegger/nvim-jdtls",
    "url": "https://github.com/mfussenegger/nvim-jdtls",
    "description": "Extensions for the built-in LSP support for eclipse.jdt.ls.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "Kasama/nvim-custom-diagnostic-highlight",
    "url": "https://github.com/Kasama/nvim-custom-diagnostic-highlight",
    "description": "Inline diagnostics popup-highlight much like coc-nvim but based on `vim.diagnostic`.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "MrcJkb/haskell-tools.nvim",
    "url": "https://github.com/MrcJkb/haskell-tools.nvim",
    "description": "Seamless integration of Neovim with Haskell development tools like haskell-language-server and Hoogle.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "ranjithshegde/ccls.nvim",
    "url": "https://github.com/ranjithshegde/ccls.nvim",
    "description": "Use off-spec extensions of ccls LSP and browse AST.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "idanarye/nvim-buffls",
    "url": "https://github.com/idanarye/nvim-buffls",
    "description": "Add LSP functionality to specific Neovim buffers.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "DNLHC/glance.nvim",
    "url": "https://github.com/DNLHC/glance.nvim",
    "description": "A pretty window for previewing, navigating and editing your LSP locations.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "linrongbin16/lsp-progress.nvim",
    "url": "https://github.com/linrongbin16/lsp-progress.nvim",
    "description": "Another lsp progress status for Neovim.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "jinzhongjia/LspUI.nvim",
    "url": "https://github.com/jinzhongjia/LspUI.nvim",
    "description": "A modern and useful UI that wraps LSP operations.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "VidocqH/lsp-lens.nvim",
    "url": "https://github.com/VidocqH/lsp-lens.nvim",
    "description": "Display function references above function definition like IDEA codelens.",
    "tags": ["lsp", "(requires neovim 0.5)"],
    "stars": 0
  },
  {
    "name": "anott03/nvim-lspinstall",
    "url": "https://github.com/anott03/nvim-lspinstall",
    "description": "Easy to install language servers.",
    "tags": ["lsp", "(requires neovim 0.5)", "lsp installer"],
    "stars": 0
  },
  {
    "name": "alexaandru/nvim-lspupdate",
    "url": "https://github.com/alexaandru/nvim-lspupdate",
    "description": "Updates installed (or auto installs if missing) LSP servers.",
    "tags": ["lsp", "(requires neovim 0.5)", "lsp installer"],
    "stars": 0
  },
  {
    "name": "williamboman/mason.nvim",
    "url": "https://github.com/williamboman/mason.nvim",
    "description": "Portable package manager that runs everywhere Neovim runs. Easily install and manage LSP servers, DAP servers, linters, and formatters.",
    "tags": ["lsp", "(requires neovim 0.5)", "lsp installer"],
    "stars": 0
  },
  {
    "name": "andrewferrier/textobj-diagnostic",
    "url": "https://github.com/andrewferrier/textobj-diagnostic.nvim",
    "description": "Text object for diagnostics (such as those generated by LSP servers).",
    "tags": ["diagnostics"],
    "stars": 0
  },
  {
    "name": "~whynothugo/lsp_lines.nvim",
    "url": "https://git.sr.ht/~whynothugo/lsp_lines.nvim",
    "description": "Render diagnostics using virtual lines on top of the real line of code.",
    "tags": ["diagnostics"],
    "stars": 0
  },
  {
    "name": "onsails/diaglist.nvim",
    "url": "https://github.com/onsails/diaglist.nvim",
    "description": "Live render workspace diagnostics in quickfix, buffer diagnostics in loclist.",
    "tags": ["diagnostics"],
    "stars": 0
  },
  {
    "name": "folke/trouble.nvim",
    "url": "https://github.com/folke/trouble.nvim",
    "description": "A pretty diagnostics list to help you solve all the trouble your code is causing.",
    "tags": ["diagnostics"],
    "stars": 0
  },
  {
    "name": "folke/lsp-colors.nvim",
    "url": "https://github.com/folke/lsp-colors.nvim",
    "description": "A plugin that adds missing LSP diagnostics highlight groups for color schemes that don't yet support the builtin LSP client.",
    "tags": ["diagnostics"],
    "stars": 0
  },
  {
    "name": "ms-jpq/coq_nvim",
    "url": "https://github.com/ms-jpq/coq_nvim",
    "description": "Fast as FUCK Neovim completion. SQLite, concurrent scheduler, hundreds of hours of optimization.",
    "tags": ["completion"],
    "stars": 0
  },
  {
    "name": "hrsh7th/nvim-cmp",
    "url": "https://github.com/hrsh7th/nvim-cmp",
    "description": "A completion plugin written in Lua. New version of nvim-compe.",
    "tags": ["completion"],
    "stars": 0
  },
  {
    "name": "lukas-reineke/cmp-under-comparator",
    "url": "https://github.com/lukas-reineke/cmp-under-comparator",
    "description": "A nvim-cmp function for better sorting.",
    "tags": ["completion"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.completion",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-completion.md",
    "description": "Module of `mini.nvim` for asynchronous two-stage completion. Supports showing completion item info and independent function signature.",
    "tags": ["completion"],
    "stars": 0
  },
  {
    "name": "noib3/nvim-compleet",
    "url": "https://github.com/noib3/nvim-compleet",
    "description": "A Neovim autocompletion framework written in Rust.",
    "tags": ["completion"],
    "stars": 0
  },
  {
    "name": "vigoux/complementree.nvim",
    "url": "https://github.com/vigoux/complementree.nvim",
    "description": "Light and synchronous completion plugin based on tree-sitter and with a functional-programming interface.",
    "tags": ["completion"],
    "stars": 0
  },
  {
    "name": "simrat39/rust-tools.nvim",
    "url": "https://github.com/simrat39/rust-tools.nvim",
    "description": "Tools for better development in Rust using Neovim's builtin LSP.",
    "tags": ["completion"],
    "stars": 0
  },
  {
    "name": "zbirenbaum/copilot.lua",
    "url": "https://github.com/zbirenbaum/copilot.lua",
    "description": "Fully featured Lua replacement for [GitHub/copilot.vim](https://github.com/github/copilot.vim).",
    "tags": ["completion"],
    "stars": 0
  },
  {
    "name": "Julian/lean.nvim",
    "url": "https://github.com/Julian/lean.nvim",
    "description": "Neovim support for the [Lean Theorem Prover](https://leanprover.github.io/).",
    "tags": ["programming languages support"],
    "stars": 0
  },
  {
    "name": "akinsho/flutter-tools.nvim",
    "url": "https://github.com/akinsho/flutter-tools.nvim",
    "description": "Build Flutter and Dart applications using the native LSP.",
    "tags": ["programming languages support"],
    "stars": 0
  },
  {
    "name": "gbprod/phpactor.nvim",
    "url": "https://github.com/gbprod/phpactor.nvim",
    "description": "Lua version of the Phpactor Vim plugin to take advantage of the latest Neovim features.",
    "tags": ["programming languages support"],
    "stars": 0
  },
  {
    "name": "brendalf/mix.nvim",
    "url": "https://github.com/brendalf/mix.nvim",
    "description": "Mix (from Elixir) wrapper plugin.",
    "tags": ["programming languages support"],
    "stars": 0
  },
  {
    "name": "AckslD/swenv.nvim",
    "url": "https://github.com/AckslD/swenv.nvim",
    "description": "Tiny plugin to quickly switch Python virtual environments without restarting.",
    "tags": ["programming languages support"],
    "stars": 0
  },
  {
    "name": "gennaro-tedesco/nvim-jqx",
    "url": "https://github.com/gennaro-tedesco/nvim-jqx",
    "description": "Interactive interface for JSON files.",
    "tags": ["programming languages support"],
    "stars": 0
  },
  {
    "name": "nanotee/sqls.nvim",
    "url": "https://github.com/nanotee/sqls.nvim",
    "description": "SQL database connection plugin + LSP client.",
    "tags": ["programming languages support"],
    "stars": 0
  },
  {
    "name": "dmmulroy/tsc.nvim",
    "url": "https://github.com/dmmulroy/tsc.nvim",
    "description": "Asynchronous project-wide TypeScript type-checking using the TypeScript compiler (TSC) with results loaded into a quickfix list.",
    "tags": ["programming languages support"],
    "stars": 0
  },
  {
    "name": "ray-x/go.nvim",
    "url": "https://github.com/ray-x/go.nvim",
    "description": "Golang plugin based on lsp and Treesitter.",
    "tags": ["programming languages support", "golang"],
    "stars": 0
  },
  {
    "name": "crusj/structrue-go.nvim",
    "url": "https://github.com/crusj/structrue-go.nvim",
    "description": "A better structured display of Golang symbols information.",
    "tags": ["programming languages support", "golang"],
    "stars": 0
  },
  {
    "name": "crispgm/nvim-go",
    "url": "https://github.com/crispgm/nvim-go",
    "description": "A minimal implementation of Golang development plugin.",
    "tags": ["programming languages support", "golang"],
    "stars": 0
  },
  {
    "name": "edolphin-ydf/goimpl.nvim",
    "url": "https://github.com/edolphin-ydf/goimpl.nvim",
    "description": "Generate interface stubs for a type.",
    "tags": ["programming languages support", "golang"],
    "stars": 0
  },
  {
    "name": "olexsmir/gopher.nvim",
    "url": "https://github.com/olexsmir/gopher.nvim/",
    "description": "Plugin for making Golang development easiest.",
    "tags": ["programming languages support", "golang"],
    "stars": 0
  },
  {
    "name": "rafaelsq/nvim-goc.lua",
    "url": "https://github.com/rafaelsq/nvim-goc.lua",
    "description": "Highlight your buffer with Golang Code Coverage.",
    "tags": ["programming languages support", "golang"],
    "stars": 0
  },
  {
    "name": "crusj/hierarchy-tree-go.nvim",
    "url": "https://github.com/crusj/hierarchy-tree-go.nvim",
    "description": "Neovim plugin for Golang, callHierarchy UI tree.",
    "tags": ["programming languages support", "golang"],
    "stars": 0
  },
  {
    "name": "someone-stole-my-name/yaml-companion.nvim",
    "url": "https://github.com/someone-stole-my-name/yaml-companion.nvim",
    "description": "Get, set and autodetect YAML schemas in your buffers.",
    "tags": ["yaml"],
    "stars": 0
  },
  {
    "name": "cuducos/yaml.nvim",
    "url": "https://github.com/cuducos/yaml.nvim",
    "description": "Utils to work with YAML files.",
    "tags": ["yaml"],
    "stars": 0
  },
  {
    "name": "NTBBloodbath/rest.nvim",
    "url": "https://github.com/NTBBloodbath/rest.nvim",
    "description": "A fast Neovim HTTP client written in Lua.",
    "tags": ["web development"],
    "stars": 0
  },
  {
    "name": "ray-x/web-tools.nvim",
    "url": "https://github.com/ray-x/web-tools.nvim",
    "description": "Launch a local development server with live reload feature for static & dynamic pages, HTML & CSS tag rename with LSP.",
    "tags": ["web development"],
    "stars": 0
  },
  {
    "name": "ellisonleao/glow.nvim",
    "url": "https://github.com/ellisonleao/glow.nvim",
    "description": "Markdown preview using glow.",
    "tags": ["markdown and latex"],
    "stars": 0
  },
  {
    "name": "iamcco/markdown-preview.nvim",
    "url": "https://github.com/iamcco/markdown-preview.nvim",
    "description": "Preview markdown on your modern browser with synchronised scrolling and flexible configuration.",
    "tags": ["markdown and latex"],
    "stars": 0
  },
  {
    "name": "davidgranstrom/nvim-markdown-preview",
    "url": "https://github.com/davidgranstrom/nvim-markdown-preview",
    "description": "Markdown preview in the browser using pandoc and live-server through Neovim's job-control API.",
    "tags": ["markdown and latex"],
    "stars": 0
  },
  {
    "name": "jghauser/auto-pandoc.nvim",
    "url": "https://github.com/jghauser/auto-pandoc.nvim",
    "description": "Easy pandoc conversion leveraging yaml blocks.",
    "tags": ["markdown and latex"],
    "stars": 0
  },
  {
    "name": "jghauser/follow-md-links.nvim",
    "url": "https://github.com/jghauser/follow-md-links.nvim",
    "description": "Press enter to follow internal markdown links.",
    "tags": ["markdown and latex"],
    "stars": 0
  },
  {
    "name": "jubnzv/mdeval.nvim",
    "url": "https://github.com/jubnzv/mdeval.nvim",
    "description": "Evaluate code blocks inside markdown documents.",
    "tags": ["markdown and latex"],
    "stars": 0
  },
  {
    "name": "kdheepak/panvimdoc",
    "url": "https://github.com/kdheepak/panvimdoc",
    "description": "A pandoc to vimdoc GitHub action.",
    "tags": ["markdown and latex"],
    "stars": 0
  },
  {
    "name": "frabjous/knap",
    "url": "https://github.com/frabjous/knap",
    "description": "Plugin for creating automatic updating-as-you-type previews for markdown, LaTeX and other documents.",
    "tags": ["markdown and latex"],
    "stars": 0
  },
  {
    "name": "jbyuki/carrot.nvim",
    "url": "https://github.com/jbyuki/carrot.nvim",
    "description": "Markdown evaluator Lua code blocks.",
    "tags": ["markdown and latex"],
    "stars": 0
  },
  {
    "name": "AckslD/nvim-FeMaco.lua",
    "url": "https://github.com/AckslD/nvim-FeMaco.lua",
    "description": "Catalyze your Fenced Markdown Code-block editing.",
    "tags": ["markdown and latex"],
    "stars": 0
  },
  {
    "name": "NFrid/markdown-togglecheck",
    "url": "https://github.com/NFrid/markdown-togglecheck",
    "description": "Simple Neovim plugin for toggling check boxes using Treesitter.",
    "tags": ["markdown and latex"],
    "stars": 0
  },
  {
    "name": "toppair/peek.nvim",
    "url": "https://github.com/toppair/peek.nvim",
    "description": "Preview markdown in a webview window.",
    "tags": ["markdown and latex"],
    "stars": 0
  },
  {
    "name": "yaocccc/nvim-hl-mdcodeblock.lua",
    "url": "https://github.com/yaocccc/nvim-hl-mdcodeblock.lua",
    "description": "Highlight markdown codeblock using Tree-sitter.",
    "tags": ["markdown and latex"],
    "stars": 0
  },
  {
    "name": "kiran94/edit-markdown-table.nvim",
    "url": "https://github.com/kiran94/edit-markdown-table.nvim",
    "description": "Edit Markdown Tables using Tree-sitter.",
    "tags": ["markdown and latex"],
    "stars": 0
  },
  {
    "name": "potamides/pantran.nvim",
    "url": "https://github.com/potamides/pantran.nvim",
    "description": "Translate your text with an interactive translation window.",
    "tags": ["language"],
    "stars": 0
  },
  {
    "name": "niuiic/translate.nvim",
    "url": "https://github.com/niuiic/translate.nvim",
    "description": "Invoke any translation engine via shell command.",
    "tags": ["language"],
    "stars": 0
  },
  {
    "name": "nvim-treesitter/nvim-treesitter",
    "url": "https://github.com/nvim-treesitter/nvim-treesitter",
    "description": "Neovim Treesitter configurations and abstraction layer.",
    "tags": ["syntax"],
    "stars": 0
  },
  {
    "name": "nvim-treesitter/nvim-treesitter-textobjects",
    "url": "https://github.com/nvim-treesitter/nvim-treesitter-textobjects",
    "description": "Create your own textobjects using tree-sitter queries.",
    "tags": ["syntax"],
    "stars": 0
  },
  {
    "name": "RRethy/nvim-treesitter-textsubjects",
    "url": "https://github.com/RRethy/nvim-treesitter-textsubjects",
    "description": "Location and syntax aware text objects which _do what you mean_.",
    "tags": ["syntax"],
    "stars": 0
  },
  {
    "name": "kylechui/nvim-surround",
    "url": "https://github.com/kylechui/nvim-surround",
    "description": "A plugin for adding/changing/deleting surrounding delimiter pairs.",
    "tags": ["syntax"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.surround",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-surround.md",
    "description": "Module of `mini.nvim` for working with text surroundings (add, delete, replace, find, highlight). Supports dot-repeat, different search methods, \"last\"/\"next\" extended mappings, tree-sitter integration, and more.",
    "tags": ["syntax"],
    "stars": 0
  },
  {
    "name": "m-demare/hlargs.nvim",
    "url": "https://github.com/m-demare/hlargs.nvim",
    "description": "Highlight arguments' definitions and usages, using Treesitter.",
    "tags": ["syntax"],
    "stars": 0
  },
  {
    "name": "LhKipp/nvim-nu",
    "url": "https://github.com/LhKipp/nvim-nu",
    "description": "Basic editor support for the nushell language.",
    "tags": ["syntax"],
    "stars": 0
  },
  {
    "name": "desdic/agrolens.nvim",
    "url": "https://github.com/desdic/agrolens.nvim",
    "description": "Navigate via Tree-sitter nodes using Telescope.",
    "tags": ["syntax"],
    "stars": 0
  },
  {
    "name": "norcalli/snippets.nvim",
    "url": "https://github.com/norcalli/snippets.nvim",
    "description": "Snippets in Lua.",
    "tags": ["snippet"],
    "stars": 0
  },
  {
    "name": "L3MON4D3/LuaSnip",
    "url": "https://github.com/L3MON4D3/LuaSnip",
    "description": "A snippet engine written in Lua.",
    "tags": ["snippet"],
    "stars": 0
  },
  {
    "name": "smjonas/snippet-converter.nvim",
    "url": "https://github.com/smjonas/snippet-converter.nvim",
    "description": "Convert snippets between the most common snippet formats and modify them using a few lines of Lua code.",
    "tags": ["snippet"],
    "stars": 0
  },
  {
    "name": "dcampos/nvim-snippy",
    "url": "https://github.com/dcampos/nvim-snippy",
    "description": "Snippet plugin written in Lua with support for [vim-snippets](https://github.com/honza/vim-snippets).",
    "tags": ["snippet"],
    "stars": 0
  },
  {
    "name": "ellisonleao/carbon-now.nvim",
    "url": "https://github.com/ellisonleao/carbon-now.nvim",
    "description": "Create beautiful code snippets directly from Neovim.",
    "tags": ["snippet"],
    "stars": 0
  },
  {
    "name": "TobinPalmer/rayso.nvim",
    "url": "https://github.com/TobinPalmer/rayso.nvim",
    "description": "Create code snippets in Neovim using [ray.so](https://ray.so).",
    "tags": ["snippet"],
    "stars": 0
  },
  {
    "name": "gennaro-tedesco/nvim-peekup",
    "url": "https://github.com/gennaro-tedesco/nvim-peekup",
    "description": "Dynamically interact with Vim registers.",
    "tags": ["register"],
    "stars": 0
  },
  {
    "name": "tversteeg/registers.nvim",
    "url": "https://github.com/tversteeg/registers.nvim",
    "description": "Non-obtrusive minimal preview of Vim registers.",
    "tags": ["register"],
    "stars": 0
  },
  {
    "name": "acksld/nvim-neoclip.lua",
    "url": "https://github.com/AckslD/nvim-neoclip.lua",
    "description": "Clipboard manager Neovim plugin with telescope integration.",
    "tags": ["register"],
    "stars": 0
  },
  {
    "name": "tenxsoydev/karen-yank.nvim",
    "url": "https://github.com/tenxsoydev/karen-yank.nvim",
    "description": "More intentional register handling with delete, cut and yank mappings.",
    "tags": ["register"],
    "stars": 0
  },
  {
    "name": "cbochs/grapple.nvim",
    "url": "https://github.com/cbochs/grapple.nvim",
    "description": "Provides tagging, cursor tracking, and immediate navigation to important project files.",
    "tags": ["marks"],
    "stars": 0
  },
  {
    "name": "chentoast/marks.nvim",
    "url": "https://github.com/chentoast/marks.nvim",
    "description": "A better user experience for viewing and interacting with Vim marks.",
    "tags": ["marks"],
    "stars": 0
  },
  {
    "name": "ThePrimeagen/harpoon",
    "url": "https://github.com/ThePrimeagen/harpoon",
    "description": "A per project, auto updating and editable marks utility for fast file navigation.",
    "tags": ["marks"],
    "stars": 0
  },
  {
    "name": "ofirgall/open.nvim",
    "url": "https://github.com/ofirgall/open.nvim",
    "description": "Open the current word with custom openers, GitHub shorthand for example.",
    "tags": ["marks"],
    "stars": 0
  },
  {
    "name": "LeonHeidelbach/trailblazer.nvim",
    "url": "https://github.com/LeonHeidelbach/trailblazer.nvim",
    "description": "TrailBlazer introduces a stack based mark system that enables a completely new dynamic and super fast workflow using project wide marks.",
    "tags": ["marks"],
    "stars": 0
  },
  {
    "name": "tomasky/bookmarks.nvim",
    "url": "https://github.com/tomasky/bookmarks.nvim",
    "description": "Bookmarks with global file storage, written in Lua.",
    "tags": ["marks"],
    "stars": 0
  },
  {
    "name": "kevinhwang91/nvim-hlslens",
    "url": "https://github.com/kevinhwang91/nvim-hlslens",
    "description": "Helps you better glance searched information, seamlessly jump matched instances.",
    "tags": ["search"],
    "stars": 0
  },
  {
    "name": "rktjmp/highlight-current-n.nvim",
    "url": "https://github.com/rktjmp/highlight-current-n.nvim",
    "description": "Highlights the current /, ? or \\* match under your cursor when pressing n or N and gets out of the way afterwards.",
    "tags": ["search"],
    "stars": 0
  },
  {
    "name": "gaborvecsei/memento.nvim",
    "url": "https://github.com/gaborvecsei/memento.nvim",
    "description": "Keeps track of your visited file history after a buffer is closed. Reopen files more easily.",
    "tags": ["search"],
    "stars": 0
  },
  {
    "name": "ray-x/sad.nvim",
    "url": "https://github.com/ray-x/sad.nvim",
    "description": "Space Age seD in neovim. Batch file edit tool, a wrapper for [sad](https://github.com/ms-jpq/sad)",
    "tags": ["search"],
    "stars": 0
  },
  {
    "name": "s1n7ax/nvim-search-and-replace",
    "url": "https://github.com/s1n7ax/nvim-search-and-replace",
    "description": "Search and replace in multiple files at the same time from the current working directory.",
    "tags": ["search"],
    "stars": 0
  },
  {
    "name": "roobert/search-replace.nvim",
    "url": "https://github.com/roobert/search-replace.nvim",
    "description": "Brings better features to the native search and replace experience.",
    "tags": ["search"],
    "stars": 0
  },
  {
    "name": "AckslD/muren.nvim",
    "url": "https://github.com/AckslD/muren.nvim/",
    "description": "Multiple replacements through interactive UI.",
    "tags": ["search"],
    "stars": 0
  },
  {
    "name": "nvim-telescope/telescope.nvim",
    "url": "https://github.com/nvim-telescope/telescope.nvim",
    "description": "Telescope.nvim is a highly [extendable](https://github.com/nvim-telescope/telescope.nvim/wiki/Extensions) fuzzy finder over lists. Built on the latest awesome features from Neovim core. Telescope is centered around modularity, allowing for easy customization.",
    "tags": ["fuzzy finder"],
    "stars": 0
  },
  {
    "name": "vijaymarupudi/nvim-fzf",
    "url": "https://github.com/vijaymarupudi/nvim-fzf",
    "description": "A Lua API for using FZF (Neovim >= 0.5). Allows for full asynchronicity for UI speed and usability.",
    "tags": ["fuzzy finder"],
    "stars": 0
  },
  {
    "name": "camspiers/snap",
    "url": "https://github.com/camspiers/snap",
    "description": "An extensible fuzzy finder. Similar to Telescope, and optimized for performance, especially when grepping in large codebases.",
    "tags": ["fuzzy finder"],
    "stars": 0
  },
  {
    "name": "ibhagwan/fzf-lua",
    "url": "https://github.com/ibhagwan/fzf-lua",
    "description": "The Lua version of `fzf.vim`, high-performance and fully async, supports `nvim-web-devicons`, git indicators, LSP, quickfix/location lists and more. Also supports [`skim`](https://github.com/lotabout/skim) as its fzf binary.",
    "tags": ["fuzzy finder"],
    "stars": 0
  },
  {
    "name": "jvgrootveld/telescope-zoxide",
    "url": "https://github.com/jvgrootveld/telescope-zoxide",
    "description": "Telescope integration for [zoxide](https://github.com/ajeetdsouza/zoxide), a smart directory picker that tracks your usage.",
    "tags": ["fuzzy finder"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.fuzzy",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-fuzzy.md",
    "description": "Module of `mini.nvim` with functions to perform fuzzy matching of one string to others along with fast Telescope sorter.",
    "tags": ["fuzzy finder"],
    "stars": 0
  },
  {
    "name": "axkirillov/easypick.nvim",
    "url": "https://github.com/axkirillov/easypick.nvim",
    "description": "Easypick lets you easily create Telescope pickers from arbitrary console commands.",
    "tags": ["fuzzy finder"],
    "stars": 0
  },
  {
    "name": "kyazdani42/nvim-tree.lua",
    "url": "https://github.com/kyazdani42/nvim-tree.lua",
    "description": "A simple and fast file explorer tree.",
    "tags": ["file explorer"],
    "stars": 0
  },
  {
    "name": "luukvbaal/nnn.nvim",
    "url": "https://github.com/luukvbaal/nnn.nvim",
    "description": "File explorer powered by [nnn](https://github.com/jarun/nnn) and Lua.",
    "tags": ["file explorer"],
    "stars": 0
  },
  {
    "name": "tamago324/lir.nvim",
    "url": "https://github.com/tamago324/lir.nvim",
    "description": "Simple file explorer.",
    "tags": ["file explorer"],
    "stars": 0
  },
  {
    "name": "TimUntersberger/neofs",
    "url": "https://github.com/TimUntersberger/neofs",
    "description": "A file manager written in Lua.",
    "tags": ["file explorer"],
    "stars": 0
  },
  {
    "name": "kevinhwang91/rnvimr",
    "url": "https://github.com/kevinhwang91/rnvimr",
    "description": "A simple yet amazing file explorer.",
    "tags": ["file explorer"],
    "stars": 0
  },
  {
    "name": "Xuyuanp/yanil",
    "url": "https://github.com/Xuyuanp/yanil",
    "description": "Yet Another Nerdtree In Lua.",
    "tags": ["file explorer"],
    "stars": 0
  },
  {
    "name": "ms-jpq/chadtree",
    "url": "https://github.com/ms-jpq/chadtree",
    "description": "File manager. Better than NERDTree.",
    "tags": ["file explorer"],
    "stars": 0
  },
  {
    "name": "is0n/fm-nvim",
    "url": "https://github.com/is0n/fm-nvim",
    "description": "Neovim plugin that lets you use your favorite terminal file managers (and fuzzy finders).",
    "tags": ["file explorer"],
    "stars": 0
  },
  {
    "name": "nvim-neo-tree/neo-tree.nvim",
    "url": "https://github.com/nvim-neo-tree/neo-tree.nvim",
    "description": "Neo-tree is a Neovim plugin to browse the file system and other tree like structures in whatever style suits you, including sidebars, floating windows, netrw split style, or all of them at once.",
    "tags": ["file explorer"],
    "stars": 0
  },
  {
    "name": "elihunter173/dirbuf.nvim",
    "url": "https://github.com/elihunter173/dirbuf.nvim",
    "description": "A file manager which lets you edit your filesystem like you edit text.",
    "tags": ["file explorer"],
    "stars": 0
  },
  {
    "name": "theblob42/drex.nvim",
    "url": "https://github.com/TheBlob42/drex.nvim",
    "description": "A simple and configurable file explorer written in Lua.",
    "tags": ["file explorer"],
    "stars": 0
  },
  {
    "name": "SidOfc/carbon.nvim",
    "url": "https://github.com/SidOfc/carbon.nvim",
    "description": "The simple directory tree viewer written in Lua.",
    "tags": ["file explorer"],
    "stars": 0
  },
  {
    "name": "dinhhuy258/sfm.nvim",
    "url": "https://github.com/dinhhuy258/sfm.nvim",
    "description": "An alternative to Nvim-tree designed to be extensible and minimalist.",
    "tags": ["file explorer"],
    "stars": 0
  },
  {
    "name": "kiran94/s3edit.nvim",
    "url": "https://github.com/kiran94/s3edit.nvim",
    "description": "Edit files from Amazon S3 directly from Neovim.",
    "tags": ["file explorer"],
    "stars": 0
  },
  {
    "name": "stevearc/oil.nvim",
    "url": "https://github.com/stevearc/oil.nvim",
    "description": "Edit your filesystem like a buffer.",
    "tags": ["file explorer"],
    "stars": 0
  },
  {
    "name": "kelly-lin/ranger.nvim",
    "url": "https://github.com/kelly-lin/ranger.nvim",
    "description": "[Ranger](https://github.com/ranger/ranger) integration for neovim.",
    "tags": ["file explorer"],
    "stars": 0
  },
  {
    "name": "pluffie/neoproj",
    "url": "https://github.com/pluffie/neoproj",
    "description": "Small yet powerful project (and session) manager.",
    "tags": ["project"],
    "stars": 0
  },
  {
    "name": "shaeinst/penvim",
    "url": "https://github.com/shaeinst/penvim",
    "description": "Project's Root Directory and Documents Indentation detector with project based config loader.",
    "tags": ["project"],
    "stars": 0
  },
  {
    "name": "nyngwang/NeoRoot.lua",
    "url": "https://github.com/nyngwang/NeoRoot.lua",
    "description": "Change your current working directory to the buffer your cursor is on, and try to go up 2 levels but stop after it encounters one of the project roots you define.",
    "tags": ["project"],
    "stars": 0
  },
  {
    "name": "windwp/nvim-projectconfig",
    "url": "https://github.com/windwp/nvim-projectconfig",
    "description": "Load Neovim config depend on project directory.",
    "tags": ["project"],
    "stars": 0
  },
  {
    "name": "windwp/nvim-spectre",
    "url": "https://github.com/windwp/nvim-spectre",
    "description": "Search and replace panel.",
    "tags": ["project"],
    "stars": 0
  },
  {
    "name": "ahmedkhalf/project.nvim",
    "url": "https://github.com/ahmedkhalf/project.nvim",
    "description": "An all in one Neovim plugin that provides superior project management.",
    "tags": ["project"],
    "stars": 0
  },
  {
    "name": "klen/nvim-config-local",
    "url": "https://github.com/klen/nvim-config-local",
    "description": "Secure load local config files from working directories.",
    "tags": ["project"],
    "stars": 0
  },
  {
    "name": "cljoly/telescope-repo.nvim",
    "url": "https://cj.rs/telescope-repo-nvim/",
    "description": "Telescope picker to jump to any repository (git or other) on the file system.",
    "tags": ["project"],
    "stars": 0
  },
  {
    "name": "MunifTanjim/exrc.nvim",
    "url": "https://github.com/MunifTanjim/exrc.nvim",
    "description": "Secure Project Local Config.",
    "tags": ["project"],
    "stars": 0
  },
  {
    "name": "otavioschwanck/telescope-alternate.nvim",
    "url": "https://github.com/otavioschwanck/telescope-alternate.nvim",
    "description": "Alternate between common files using telescope.",
    "tags": ["project"],
    "stars": 0
  },
  {
    "name": "natecraddock/workspaces.nvim",
    "url": "https://github.com/natecraddock/workspaces.nvim",
    "description": "Manage workspace directories.",
    "tags": ["project"],
    "stars": 0
  },
  {
    "name": "gnikdroy/projections.nvim",
    "url": "https://github.com/gnikdroy/projections.nvim",
    "description": "Tiny project + session manager.",
    "tags": ["project"],
    "stars": 0
  },
  {
    "name": "nyngwang/suave.lua",
    "url": "https://github.com/nyngwang/suave.lua",
    "description": "Multi-tabs project session automation.",
    "tags": ["project"],
    "stars": 0
  },
  {
    "name": "desdic/telescope-rooter.nvim",
    "url": "https://github.com/desdic/telescope-rooter.nvim",
    "description": "Makes sure to always start telescope (and only telescope) from the project/root directory.",
    "tags": ["project"],
    "stars": 0
  },
  {
    "name": "jinzhongjia/PS_manager.nvim",
    "url": "https://github.com/jinzhongjia/PS_manager.nvim",
    "description": "Multi-project management, switch pwd automatically.",
    "tags": ["project"],
    "stars": 0
  },
  {
    "name": "NvChad/nvim-colorizer.lua",
    "url": "https://github.com/NvChad/nvim-colorizer.lua",
    "description": "A high-performance color highlighter which has no external dependencies!.",
    "tags": ["color"],
    "stars": 0
  },
  {
    "name": "sunjon/Shade.nvim",
    "url": "https://github.com/sunjon/Shade.nvim",
    "description": "Shade is a Neovim plugin that dims your inactive windows, making it easier to see the active window at a glance.",
    "tags": ["color"],
    "stars": 0
  },
  {
    "name": "winston0410/range-highlight.nvim",
    "url": "https://github.com/winston0410/range-highlight.nvim",
    "description": "An extremely lightweight plugin (~ 120loc) that highlights ranges you have entered in commandline.",
    "tags": ["color"],
    "stars": 0
  },
  {
    "name": "xiyaowong/nvim-transparent",
    "url": "https://github.com/xiyaowong/nvim-transparent",
    "description": "Make your Neovim transparent.",
    "tags": ["color"],
    "stars": 0
  },
  {
    "name": "folke/twilight.nvim",
    "url": "https://github.com/folke/twilight.nvim",
    "description": "Dim inactive portions of the code you're editing using TreeSitter.",
    "tags": ["color"],
    "stars": 0
  },
  {
    "name": "koenverburg/peepsight.nvim",
    "url": "https://github.com/koenverburg/peepsight.nvim",
    "description": "Focus only the function your cursor is in.",
    "tags": ["color"],
    "stars": 0
  },
  {
    "name": "uga-rosa/ccc.nvim",
    "url": "https://github.com/uga-rosa/ccc.nvim",
    "description": "Super powerful color picker / colorizer plugin.",
    "tags": ["color"],
    "stars": 0
  },
  {
    "name": "ziontee113/color-picker.nvim",
    "url": "https://github.com/ziontee113/color-picker.nvim",
    "description": "Plugin that lets users choose & modify RGB/HSL/HEX colors inside Neovim.",
    "tags": ["color"],
    "stars": 0
  },
  {
    "name": "lcheylus/overlength.nvim",
    "url": "https://github.com/lcheylus/overlength.nvim",
    "description": "A small plugin to highlight too long lines.",
    "tags": ["color"],
    "stars": 0
  },
  {
    "name": "brenoprata10/nvim-highlight-colors",
    "url": "https://github.com/brenoprata10/nvim-highlight-colors",
    "description": "A plugin to highlight colors with Neovim.",
    "tags": ["color"],
    "stars": 0
  },
  {
    "name": "nvim-colortils/colortils.nvim",
    "url": "https://github.com/nvim-colortils/colortils.nvim",
    "description": "A plugin providing utils to work with colors (picker, conversion) inside Neovim.",
    "tags": ["color"],
    "stars": 0
  },
  {
    "name": "Mr-LLLLL/interestingwords.nvim",
    "url": "https://github.com/Mr-LLLLL/interestingwords.nvim",
    "description": "Highlight multiple word same time and navigate word under cursor with scrolling smoothly, display search count in virualtext.",
    "tags": ["color"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.hipatterns",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-hipatterns.md",
    "description": "Module of `mini.nvim` to highlight patterns in text with configurable highlighters. Works asynchronously with configurable debounce delay.",
    "tags": ["color"],
    "stars": 0
  },
  {
    "name": "shaeinst/roshnivim-cs",
    "url": "https://github.com/shaeinst/roshnivim-cs",
    "description": "Colorscheme written in Lua, specially made for roshnivim with Tree-sitter support.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "rafamadriz/neon",
    "url": "https://github.com/rafamadriz/neon",
    "description": "Customizable colorscheme with excellent italic and bold support, dark and light variants. Made to work and look good with Tree-sitter.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "tomasiser/vim-code-dark",
    "url": "https://github.com/tomasiser/vim-code-dark",
    "description": "A dark color scheme heavily inspired by the look of the Dark+ scheme of Visual Studio Code.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "Mofiqul/vscode.nvim",
    "url": "https://github.com/Mofiqul/vscode.nvim",
    "description": "A Lua port of vim-code-dark colorscheme with vscode light and dark theme.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "marko-cerovac/material.nvim",
    "url": "https://github.com/marko-cerovac/material.nvim",
    "description": "Material.nvim is a highly configurable colorscheme written in Lua and based on the material palette.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "bluz71/vim-nightfly-colors",
    "url": "https://github.com/bluz71/vim-nightfly-colors",
    "description": "A dark midnight colorscheme with modern Neovim support including Tree-sitter.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "bluz71/vim-moonfly-colors",
    "url": "https://github.com/bluz71/vim-moonfly-colors",
    "description": "A dark charcoal colorscheme with modern Neovim support including Tree-sitter.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "ChristianChiarulli/nvcode-color-schemes.vim",
    "url": "https://github.com/ChristianChiarulli/nvcode-color-schemes.vim",
    "description": "Nvcode, onedark, nord colorschemes with Tree-sitter support.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "folke/tokyonight.nvim",
    "url": "https://github.com/folke/tokyonight.nvim",
    "description": "A clean, dark and light Neovim theme written in Lua, with support for LSP, Tree-sitter and lots of plugins.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "sainnhe/sonokai",
    "url": "https://github.com/sainnhe/sonokai",
    "description": "High Contrast & Vivid Color Scheme based on Monokai Pro.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "nyoom-engineering/oxocarbon.nvim",
    "url": "https://github.com/nyoom-engineering/oxocarbon.nvim",
    "description": "A dark and light Neovim theme written in fennel, inspired by IBM Carbon.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "kyazdani42/blue-moon",
    "url": "https://github.com/kyazdani42/blue-moon",
    "description": "A dark color scheme derived from palenight and carbonight.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "mhartington/oceanic-next",
    "url": "https://github.com/mhartington/oceanic-next",
    "description": "Oceanic Next theme.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "glepnir/zephyr-nvim",
    "url": "https://github.com/glepnir/zephyr-nvim",
    "description": "A dark colorscheme with Tree-sitter support.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "rockerBOO/boo-colorscheme-nvim",
    "url": "https://github.com/rockerBOO/boo-colorscheme-nvim",
    "description": "A colorscheme with handcrafted support for LSP, Tree-sitter.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "jim-at-jibba/ariake-vim-colors",
    "url": "https://github.com/jim-at-jibba/ariake-vim-colors",
    "description": "A port of the great Atom theme. Dark and light with Tree-sitter support.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "Th3Whit3Wolf/onebuddy",
    "url": "https://github.com/Th3Whit3Wolf/onebuddy",
    "description": "Light and dark atom one theme.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "ishan9299/modus-theme-vim",
    "url": "https://github.com/ishan9299/modus-theme-vim",
    "description": "This is a color scheme developed by Protesilaos Stavrou for emacs.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "sainnhe/edge",
    "url": "https://github.com/sainnhe/edge",
    "description": "Clean & Elegant Color Scheme inspired by Atom One and Material.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "theniceboy/nvim-deus",
    "url": "https://github.com/theniceboy/nvim-deus",
    "description": "Vim-deus with Tree-sitter support.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "bkegley/gloombuddy",
    "url": "https://github.com/bkegley/gloombuddy",
    "description": "Gloom inspired theme.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "Th3Whit3Wolf/one-nvim",
    "url": "https://github.com/Th3Whit3Wolf/one-nvim",
    "description": "An Atom One inspired dark and light colorscheme.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "PHSix/nvim-hybrid",
    "url": "https://github.com/PHSix/nvim-hybrid",
    "description": "A Neovim colorscheme write in Lua.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "Th3Whit3Wolf/space-nvim",
    "url": "https://github.com/Th3Whit3Wolf/space-nvim",
    "description": "A spacemacs inspired dark and light colorscheme.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "yonlu/omni.vim",
    "url": "https://github.com/yonlu/omni.vim",
    "description": "Omni color scheme for Vim.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "ray-x/aurora",
    "url": "https://github.com/ray-x/aurora",
    "description": "A 24-bit dark theme with Tree-sitter and LSP support.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "ray-x/starry.nvim",
    "url": "https://github.com/ray-x/starry.nvim",
    "description": "A collection of modern Neovim colorschemes: material, moonlight, dracula (blood), monokai, mariana, emerald, earlysummer, middlenight_blue, darksolar.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "tanvirtin/monokai.nvim",
    "url": "https://github.com/tanvirtin/monokai.nvim",
    "description": "Monokai theme written in Lua.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "ofirgall/ofirkai.nvim",
    "url": "https://github.com/ofirgall/ofirkai.nvim",
    "description": "Monokai theme that aims to feel like Sublime Text.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "savq/melange-nvim",
    "url": "https://github.com/savq/melange-nvim",
    "description": "Warm colorscheme written in Lua with support for various terminal emulators.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "RRethy/nvim-base16",
    "url": "https://github.com/RRethy/nvim-base16",
    "description": "Neovim plugin for building base16 colorschemes. Includes support for Treesitter and LSP highlight groups.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "fenetikm/falcon",
    "url": "https://github.com/fenetikm/falcon",
    "description": "A colour scheme for terminals, Vim and friends.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "andersevenrud/nordic.nvim",
    "url": "https://github.com/andersevenrud/nordic.nvim",
    "description": "A nord-esque colorscheme.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "shaunsingh/nord.nvim",
    "url": "https://github.com/shaunsingh/nord.nvim",
    "description": "Neovim theme based off of the Nord Color Palette.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "svrana/neosolarized.nvim",
    "url": "https://github.com/svrana/neosolarized.nvim",
    "description": "Dark solarized colorscheme using colorbuddy for easy customization.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "ishan9299/nvim-solarized-lua",
    "url": "https://github.com/ishan9299/nvim-solarized-lua",
    "description": "Solarized colorscheme in Lua (Neovim >= 0.5).",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "shaunsingh/moonlight.nvim",
    "url": "https://github.com/shaunsingh/moonlight.nvim",
    "description": "Port of VSCode's Moonlight colorscheme, written in Lua with built-in support for native LSP, Tree-sitter and many more plugins.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "navarasu/onedark.nvim",
    "url": "https://github.com/navarasu/onedark.nvim",
    "description": "A One Dark Theme (Neovim >= 0.5) written in Lua based on Atom's One Dark Theme.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "lourenci/github-colors",
    "url": "https://github.com/lourenci/github-colors",
    "description": "GitHub colors leveraging Tree-sitter to get 100% accuracy.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "sainnhe/gruvbox-material",
    "url": "https://github.com/sainnhe/gruvbox-material",
    "description": "Gruvbox modification with softer contrast and Tree-sitter support.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "sainnhe/everforest",
    "url": "https://github.com/sainnhe/everforest",
    "description": "A green based colorscheme designed to be warm, soft and easy on the eyes.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "neanias/everforest-nvim",
    "url": "https://github.com/neanias/everforest-nvim",
    "description": "A Lua port of the Everforest colour scheme.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "NTBBloodbath/doom-one.nvim",
    "url": "https://github.com/NTBBloodbath/doom-one.nvim",
    "description": "Lua port of doom-emacs' doom-one.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "dracula/vim",
    "url": "https://github.com/dracula/vim",
    "description": "Famous beautiful dark powered theme.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "Mofiqul/dracula.nvim",
    "url": "https://github.com/Mofiqul/dracula.nvim",
    "description": "Dracula colorscheme for neovim written in Lua.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "yashguptaz/calvera-dark.nvim",
    "url": "https://github.com/yashguptaz/calvera-dark.nvim",
    "description": "A port of [VSCode Calvara Dark](https://github.com/saurabhdaware/vscode-calvera-dark) Theme to Neovim with Tree-sitter and many other plugins support.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "nxvu699134/vn-night.nvim",
    "url": "https://github.com/nxvu699134/vn-night.nvim",
    "description": "A dark Neovim colorscheme written in Lua. Support built-in LSP and Tree-sitter.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "adisen99/codeschool.nvim",
    "url": "https://github.com/adisen99/codeschool.nvim",
    "description": "Codeschool colorscheme written in Lua with Tree-sitter and built-in lsp support.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "projekt0n/github-nvim-theme",
    "url": "https://github.com/projekt0n/github-nvim-theme",
    "description": "A GitHub theme, kitty, alacritty written in Lua. Support built-in LSP and Tree-sitter.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "kdheepak/monochrome.nvim",
    "url": "https://github.com/kdheepak/monochrome.nvim",
    "description": "A 16 bit monochrome colorscheme that uses hsluv for perceptually distinct gray colors, with support for Tree-sitter and other commonly used plugins.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "rose-pine/neovim",
    "url": "https://github.com/rose-pine/neovim",
    "description": "All natural pine, faux fur and a bit of soho vibes for the classy minimalist.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "mcchrish/zenbones.nvim",
    "url": "https://github.com/mcchrish/zenbones.nvim",
    "description": "A collection of Vim/Neovim colorschemes designed to highlight code using contrasts and font variations.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "catppuccin/nvim",
    "url": "https://github.com/catppuccin/nvim",
    "description": "Warm mid-tone dark theme to show off your vibrant self! with support for native LSP, Tree-sitter, and more üç®!",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "FrenzyExists/aquarium-vim",
    "url": "https://github.com/FrenzyExists/aquarium-vim",
    "description": "A dark, yet vibrant colorscheme.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "EdenEast/nightfox.nvim",
    "url": "https://github.com/EdenEast/nightfox.nvim",
    "description": "A soft dark, fully customizable Neovim theme, with support for lsp, treesitter and a variety of plugins.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "kvrohit/substrata.nvim",
    "url": "https://github.com/kvrohit/substrata.nvim",
    "description": "A cold, dark color scheme written in Lua ported from [arzg/vim-substrata](https://github.com/arzg/vim-substrata) theme.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "ldelossa/vimdark",
    "url": "https://github.com/ldelossa/vimdark",
    "description": "A minimal Vim theme for night time. Loosely based on vim-monotonic and chrome's dark reader extension. A light theme is included as well for the day time.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "Everblush/everblush.nvim",
    "url": "https://github.com/Everblush/everblush.nvim",
    "description": "A dark, vibrant and beautiful colorscheme written in Lua.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "adisen99/apprentice.nvim",
    "url": "https://github.com/adisen99/apprentice.nvim",
    "description": "Colorscheme written in Lua based on the [Apprentice](https://github.com/romainl/Apprentice) color pattete with Tree-sitter and built-in lsp support.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "olimorris/onedarkpro.nvim",
    "url": "https://github.com/olimorris/onedarkpro.nvim",
    "description": "One Dark Pro theme, written in Lua and based on the VS Code theme. Includes dark and light themes with completely customisable colors, styles and highlights.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "rmehri01/onenord.nvim",
    "url": "https://github.com/rmehri01/onenord.nvim",
    "description": "A Neovim theme that combines the Nord and Atom One Dark color palettes for a more vibrant programming experience.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "RishabhRD/gruvy",
    "url": "https://github.com/RishabhRD/gruvy",
    "description": "Gruvbuddy without colorbuddy using Lush.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#colorschemes",
    "url": "https://github.com/echasnovski/mini.nvim#plugin-colorschemes",
    "description": "Color schemes included in `mini.nvim` plugin. All of them prioritize high contrast ratio for reading text and computing palettes in perceptually uniform color spaces.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "luisiacc/gruvbox-baby",
    "url": "https://github.com/luisiacc/gruvbox-baby",
    "description": "A modern gruvbox theme with full treesitter support.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "titanzero/zephyrium",
    "url": "https://github.com/titanzero/zephyrium",
    "description": "A zephyr-esque theme, written in Lua, with TreeSitter support.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "rebelot/kanagawa.nvim",
    "url": "https://github.com/rebelot/kanagawa.nvim",
    "description": "Neovim dark colorscheme inspired by the colors of the famous painting by Katsushika Hokusai.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "tiagovla/tokyodark.nvim",
    "url": "https://github.com/tiagovla/tokyodark.nvim",
    "description": "A clean dark theme written in Lua (Neovim >= 0.5) and above.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "cpea2506/one_monokai.nvim",
    "url": "https://github.com/cpea2506/one_monokai.nvim",
    "description": "One Monokai theme written in Lua.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "phha/zenburn.nvim",
    "url": "https://github.com/phha/zenburn.nvim",
    "description": "A low-contrast dark colorscheme with support for various plugins.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "kvrohit/rasmus.nvim",
    "url": "https://github.com/kvrohit/rasmus.nvim",
    "description": "A dark color scheme written in Lua ported from [rsms/sublime-theme](https://github.com/rsms/sublime-theme) theme.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "chrsm/paramount-ng.nvim",
    "url": "https://github.com/chrsm/paramount-ng.nvim",
    "description": "A dark color scheme written using Lush. Treesitter supported.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "kaiuri/nvim-juliana",
    "url": "https://github.com/kaiuri/nvim-juliana",
    "description": "Port of Sublime's Mariana Theme to Neovim for short attention span developers with Tree-sitter support.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "lmburns/kimbox",
    "url": "https://github.com/lmburns/kimbox",
    "description": "A colorscheme with a dark background, and vibrant foreground that is centered around the color brown. A modification of [Kimbie Dark](https://marketplace.visualstudio.com/items?itemName=dnamsons.kimbie-dark-plus).",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "rockyzhang24/arctic.nvim",
    "url": "https://github.com/rockyzhang24/arctic.nvim",
    "description": "A Neovim colorscheme ported from VSCode Dark+ theme with the strict and precise color picking for both the editor and UI.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "ramojus/mellifluous.nvim",
    "url": "https://github.com/ramojus/mellifluous.nvim",
    "description": "Pleasant and productive colorscheme.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "Yazeed1s/minimal.nvim",
    "url": "https://github.com/yazeed1s/minimal.nvim",
    "description": "Two tree-sitter supported colorschemes that are inspired by base16-tomorrow-night and monokai-pro.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "lewpoly/sherbet.nvim",
    "url": "https://github.com/lewpoly/sherbet.nvim",
    "description": "A soothing colorscheme with support for popular plugins and tree-sitter.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "Mofiqul/adwaita.nvim",
    "url": "https://github.com/Mofiqul/adwaita.nvim",
    "description": "Colorscheme based on GNOME Adwaita syntax with support for popular plugins.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "olivercederborg/poimandres.nvim",
    "url": "https://github.com/olivercederborg/poimandres.nvim",
    "description": "Neovim port of [poimandres VSCode theme](https://github.com/drcmda/poimandres-theme) with Tree-sitter support, written in Lua.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "kvrohit/mellow.nvim",
    "url": "https://github.com/kvrohit/mellow.nvim",
    "description": "A soothing dark color scheme with tree-sitter support.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "gbprod/nord.nvim",
    "url": "https://github.com/gbprod/nord.nvim",
    "description": "An arctic, north-bluish clean and elegant Neovim theme, based on Nord Palette.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "Yazeed1s/oh-lucy.nvim",
    "url": "https://github.com/yazeed1s/oh-lucy.nvim",
    "description": "Two tree-sitter supported colorschemes, inspired by oh-lucy in vscode.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "embark-theme/vim",
    "url": "https://github.com/embark-theme/vim",
    "description": "A deep inky purple theme leveraging bright colors.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "nyngwang/nvimgelion",
    "url": "https://github.com/nyngwang/nvimgelion",
    "description": "Neon Genesis Evangelion but for Vimmers.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "maxmx03/FluoroMachine.nvim",
    "url": "https://github.com/maxmx03/FluoroMachine.nvim",
    "description": "Synthwave x Fluoromachine port.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "dasupradyumna/midnight.nvim",
    "url": "https://github.com/dasupradyumna/midnight.nvim",
    "description": "A modern black Neovim theme with comfortable color contrast for a pleasant visual experience, with LSP and Tree-sitter support.",
    "tags": ["colorscheme", "tree-sitter supported colorscheme"],
    "stars": 0
  },
  {
    "name": "tjdevries/gruvbuddy.nvim",
    "url": "https://github.com/tjdevries/gruvbuddy.nvim",
    "description": "Gruvbox colors.",
    "tags": ["lua colorscheme"],
    "stars": 0
  },
  {
    "name": "ellisonleao/gruvbox.nvim",
    "url": "https://github.com/ellisonleao/gruvbox.nvim",
    "description": "Gruvbox community colorscheme Lua port.",
    "tags": ["lua colorscheme"],
    "stars": 0
  },
  {
    "name": "metalelf0/jellybeans-nvim",
    "url": "https://github.com/metalelf0/jellybeans-nvim",
    "description": "A port of jellybeans colorscheme.",
    "tags": ["lua colorscheme"],
    "stars": 0
  },
  {
    "name": "lalitmee/cobalt2.nvim",
    "url": "https://github.com/lalitmee/cobalt2.nvim",
    "description": "A port of cobalt2 colorscheme using colorbuddy.",
    "tags": ["lua colorscheme"],
    "stars": 0
  },
  {
    "name": "tjdevries/colorbuddy.nvim",
    "url": "https://github.com/tjdevries/colorbuddy.nvim",
    "description": "A colorscheme helper. Written in Lua! Quick & Easy Color Schemes üòÑ.",
    "tags": ["colorscheme creation"],
    "stars": 0
  },
  {
    "name": "norcalli/nvim-base16.lua",
    "url": "https://github.com/norcalli/nvim-base16.lua",
    "description": "Programmatic Lua library for setting base16 themes.",
    "tags": ["colorscheme creation"],
    "stars": 0
  },
  {
    "name": "rktjmp/lush.nvim",
    "url": "https://github.com/rktjmp/lush.nvim",
    "description": "Define Neovim themes as a DSL in Lua, with real-time feedback.",
    "tags": ["colorscheme creation"],
    "stars": 0
  },
  {
    "name": "Iron-E/nvim-highlite",
    "url": "https://github.com/Iron-E/nvim-highlite",
    "description": "A colorscheme generator that is \"lite\" on logic for the developer.",
    "tags": ["colorscheme creation"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.base16",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-base16.md",
    "description": "Module of `mini.nvim` with fast implementation of base16 theme for manually supplied palette.",
    "tags": ["colorscheme creation"],
    "stars": 0
  },
  {
    "name": "ThemerCorp/themer.lua",
    "url": "https://github.com/themercorp/themer.lua",
    "description": "A simple highlighter plugin for neovim. It has a huge collection of colorschemes. It also has ability to create colorschemes for Vim/Neovim and other supported apps (such as kitty and alacritty).",
    "tags": ["colorscheme creation"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.colors",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-colors.md",
    "description": "Module of `mini.nvim` to tweak and save any color scheme. Also can animate transition and convert between some color spaces.",
    "tags": ["colorscheme creation"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.hues",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-hues.md",
    "description": "Module of `mini.nvim` to generate configurable color scheme. Takes only background and foreground colors as required arguments. Can adjust number of hues for non-base colors, saturation, accent color, plugin integration.",
    "tags": ["colorscheme creation"],
    "stars": 0
  },
  {
    "name": "4e554c4c/darkman.nvim",
    "url": "https://github.com/4e554c4c/darkman.nvim",
    "description": "Follow the system dark-mode setting on Linux.",
    "tags": ["colorscheme switchers"],
    "stars": 0
  },
  {
    "name": "f-person/auto-dark-mode.nvim",
    "url": "https://github.com/f-person/auto-dark-mode.nvim",
    "description": "Follow the system appearance on macOS.",
    "tags": ["colorscheme switchers"],
    "stars": 0
  },
  {
    "name": "Bekaboo/deadcolumn.nvim",
    "url": "https://github.com/Bekaboo/deadcolumn.nvim",
    "description": "Shows your colorcolumn dynamically.",
    "tags": ["bars and lines"],
    "stars": 0
  },
  {
    "name": "ecthelionvi/NeoColumn.nvim",
    "url": "https://github.com/ecthelionvi/NeoColumn.nvim",
    "description": "Toggleable colorcolumn highlighting specific characters.",
    "tags": ["bars and lines"],
    "stars": 0
  },
  {
    "name": "m4xshen/smartcolumn.nvim",
    "url": "https://github.com/m4xshen/smartcolumn.nvim",
    "description": "Hide your colorcolumn when unneeded.",
    "tags": ["bars and lines"],
    "stars": 0
  },
  {
    "name": "utilyre/barbecue.nvim",
    "url": "https://github.com/utilyre/barbecue.nvim",
    "description": "A VS Code like winbar.",
    "tags": ["bars and lines"],
    "stars": 0
  },
  {
    "name": "Bekaboo/dropbar.nvim",
    "url": "https://github.com/Bekaboo/dropbar.nvim",
    "description": "IDE-like breadcrumbs, out of the box.",
    "tags": ["bars and lines"],
    "stars": 0
  },
  {
    "name": "SmiteshP/nvim-navic",
    "url": "https://github.com/SmiteshP/nvim-navic",
    "description": "A simple statusline/winbar component that uses LSP to show your current code context.",
    "tags": ["bars and lines"],
    "stars": 0
  },
  {
    "name": "luukvbaal/statuscol.nvim",
    "url": "https://github.com/luukvbaal/statuscol.nvim",
    "description": "Configurable 'statuscolumn' with builtin segments and click handlers.",
    "tags": ["bars and lines"],
    "stars": 0
  },
  {
    "name": "NTBBloodbath/galaxyline.nvim",
    "url": "https://github.com/NTBBloodbath/galaxyline.nvim",
    "description": "Galaxyline componentizes Vim's statusline by having a provider for each text area. This means you can use the api provided by galaxyline to create the statusline that you want, easily.",
    "tags": ["bars and lines", "statusline"],
    "stars": 0
  },
  {
    "name": "tjdevries/express_line.nvim",
    "url": "https://github.com/tjdevries/express_line.nvim",
    "description": "Supports co-routines, functions and jobs.",
    "tags": ["bars and lines", "statusline"],
    "stars": 0
  },
  {
    "name": "nvim-lualine/lualine.nvim",
    "url": "https://github.com/nvim-lualine/lualine.nvim",
    "description": "A blazing fast and easy to configure Neovim statusline.",
    "tags": ["bars and lines", "statusline"],
    "stars": 0
  },
  {
    "name": "adelarsq/neoline.vim",
    "url": "https://github.com/adelarsq/neoline.vim",
    "description": "A light statusline/tabline plugin using Lua.",
    "tags": ["bars and lines", "statusline"],
    "stars": 0
  },
  {
    "name": "ojroques/nvim-hardline",
    "url": "https://github.com/ojroques/nvim-hardline",
    "description": "A statusline / bufferline. It is inspired by [vim-airline](https://github.com/vim-airline/vim-airline) but aims to be as light and simple as possible.",
    "tags": ["bars and lines", "statusline"],
    "stars": 0
  },
  {
    "name": "beauwilliams/statusline.lua",
    "url": "https://github.com/beauwilliams/statusline.lua",
    "description": "A zero-config minimal statusline written in Lua featuring awesome integrations and blazing speed!",
    "tags": ["bars and lines", "statusline"],
    "stars": 0
  },
  {
    "name": "tamton-aquib/staline.nvim",
    "url": "https://github.com/tamton-aquib/staline.nvim",
    "description": "A modern lightweight statusline in Lua. Mainly uses unicode symbols for showing info.",
    "tags": ["bars and lines", "statusline"],
    "stars": 0
  },
  {
    "name": "freddiehaddad/feline.nvim",
    "url": "https://github.com/freddiehaddad/feline.nvim",
    "description": "A minimal, stylish and customizable statusline written in Lua.",
    "tags": ["bars and lines", "statusline"],
    "stars": 0
  },
  {
    "name": "windwp/windline.nvim",
    "url": "https://github.com/windwp/windline.nvim",
    "description": "The next generation statusline. Animation statusline.",
    "tags": ["bars and lines", "statusline"],
    "stars": 0
  },
  {
    "name": "konapun/vacuumline.nvim",
    "url": "https://github.com/konapun/vacuumline.nvim",
    "description": "A galaxyline configuration inspired by airline.",
    "tags": ["bars and lines", "statusline"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.statusline",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-statusline.md",
    "description": "Module of `mini.nvim` for minimal and fast statusline. Supports content change depending on window width.",
    "tags": ["bars and lines", "statusline"],
    "stars": 0
  },
  {
    "name": "b0o/incline.nvim",
    "url": "https://github.com/b0o/incline.nvim",
    "description": "Lightweight floating statuslines, intended for use with Neovim's new global statusline.",
    "tags": ["bars and lines", "statusline"],
    "stars": 0
  },
  {
    "name": "rebelot/heirline.nvim",
    "url": "https://github.com/rebelot/heirline.nvim",
    "description": "Heirline.nvim is a no-nonsense Neovim Statusline plugin designed around recursive inheritance to be exceptionally fast and versatile.",
    "tags": ["bars and lines", "statusline"],
    "stars": 0
  },
  {
    "name": "yaocccc/nvim-lines.lua",
    "url": "https://github.com/yaocccc/nvim-lines.lua",
    "description": "A fast, light, customizable Neovim statusline and tabline(buffers) plugin.",
    "tags": ["bars and lines", "statusline"],
    "stars": 0
  },
  {
    "name": "romgrk/barbar.nvim",
    "url": "https://github.com/romgrk/barbar.nvim",
    "description": "The Neovim tabline plugin.",
    "tags": ["tabline"],
    "stars": 0
  },
  {
    "name": "akinsho/bufferline.nvim",
    "url": "https://github.com/akinsho/bufferline.nvim",
    "description": "A snazzy buffer line built using Lua.",
    "tags": ["tabline"],
    "stars": 0
  },
  {
    "name": "crispgm/nvim-tabline",
    "url": "https://github.com/crispgm/nvim-tabline",
    "description": "Neovim port of tabline.vim with Lua.",
    "tags": ["tabline"],
    "stars": 0
  },
  {
    "name": "alvarosevilla95/luatab.nvim",
    "url": "https://github.com/alvarosevilla95/luatab.nvim",
    "description": "A simple tabline written in Lua.",
    "tags": ["tabline"],
    "stars": 0
  },
  {
    "name": "johann2357/nvim-smartbufs",
    "url": "https://github.com/johann2357/nvim-smartbufs",
    "description": "Smart buffer management.",
    "tags": ["tabline"],
    "stars": 0
  },
  {
    "name": "kdheepak/tabline.nvim",
    "url": "https://github.com/kdheepak/tabline.nvim",
    "description": "A \"buffer and tab\" tabline.",
    "tags": ["tabline"],
    "stars": 0
  },
  {
    "name": "noib3/cokeline.nvim",
    "url": "https://github.com/noib3/cokeline.nvim",
    "description": "A Neovim bufferline for people with addictive personalities.",
    "tags": ["tabline"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.tabline",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-tabline.md",
    "description": "Module of `mini.nvim` for minimal tabline showing listed buffers in case of one tab and falling back to default otherwise.",
    "tags": ["tabline"],
    "stars": 0
  },
  {
    "name": "rafcamlet/tabline-framework.nvim",
    "url": "https://github.com/rafcamlet/tabline-framework.nvim",
    "description": "User-friendly framework for building your dream tabline in a few lines of code.",
    "tags": ["tabline"],
    "stars": 0
  },
  {
    "name": "nanozuki/tabby.nvim",
    "url": "https://github.com/nanozuki/tabby.nvim",
    "description": "A minimal, configurable, Neovim style tabline. Use your Neovim tabs as workspace multiplexer.",
    "tags": ["tabline"],
    "stars": 0
  },
  {
    "name": "yamatsum/nvim-cursorline",
    "url": "https://github.com/yamatsum/nvim-cursorline",
    "description": "A plugin that highlights cursor words and lines.",
    "tags": ["cursorline"],
    "stars": 0
  },
  {
    "name": "xiyaowong/nvim-cursorword",
    "url": "https://github.com/xiyaowong/nvim-cursorword",
    "description": "Part of nvim-cursorline. Highlight the word under the cursor.",
    "tags": ["cursorline"],
    "stars": 0
  },
  {
    "name": "RRethy/vim-illuminate",
    "url": "https://github.com/RRethy/vim-illuminate",
    "description": "Highlight the word under the cursor. Neovim's builtin LSP is available, it can be used to highlight more intelligently.",
    "tags": ["cursorline"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.cursorword",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-cursorword.md",
    "description": "Module of `mini.nvim` for automatic highlighting of word under cursor (displayed after customizable delay).",
    "tags": ["cursorline"],
    "stars": 0
  },
  {
    "name": "mawkler/modicator.nvim",
    "url": "https://github.com/mawkler/modicator.nvim",
    "description": "Cursor line number mode indicator. Changes the `CursorLineNr` highlight based on Vim mode.",
    "tags": ["cursorline"],
    "stars": 0
  },
  {
    "name": "nyngwang/murmur.lua",
    "url": "https://github.com/nyngwang/murmur.lua",
    "description": "Super-fast cursor word highlighting with callbacks(I call them murmurs) included.",
    "tags": ["cursorline"],
    "stars": 0
  },
  {
    "name": "glepnir/dashboard-nvim",
    "url": "https://github.com/glepnir/dashboard-nvim",
    "description": "A minimalist dashboard, inspired by doom-emacs.",
    "tags": ["startup"],
    "stars": 0
  },
  {
    "name": "goolord/alpha-nvim",
    "url": "https://github.com/goolord/alpha-nvim",
    "description": "A fast and highly customizable greeter like [vim-startify](https://github.com/mhinz/vim-startify)/dashboard-nvim.",
    "tags": ["startup"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.starter",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-starter.md",
    "description": "Module of `mini.nvim` for start screen. Displayed items are fully customizable, item selection can be done using prefix query with instant visual feedback.",
    "tags": ["startup"],
    "stars": 0
  },
  {
    "name": "henriquehbr/nvim-startup.lua",
    "url": "https://sr.ht/~henriquehbr/nvim-startup.lua",
    "description": "Displays Neovim startup time.",
    "tags": ["startup"],
    "stars": 0
  },
  {
    "name": "startup-nvim/startup.nvim",
    "url": "https://github.com/startup-nvim/startup.nvim",
    "description": "The fully customizable greeter for neovim.",
    "tags": ["startup"],
    "stars": 0
  },
  {
    "name": "willothy/veil.nvim",
    "url": "https://github.com/willothy/veil.nvim",
    "description": "A blazingly fast, animated, and infinitely customizable startup / dashboard plugin.",
    "tags": ["startup"],
    "stars": 0
  },
  {
    "name": "kyazdani42/nvim-web-devicons",
    "url": "https://github.com/kyazdani42/nvim-web-devicons",
    "description": "A Lua fork of [vim-devicons](https://github.com/ryanoasis/vim-devicons).",
    "tags": ["icon"],
    "stars": 0
  },
  {
    "name": "yamatsum/nvim-nonicons",
    "url": "https://github.com/yamatsum/nvim-nonicons",
    "description": "Collection of configurations for nvim-web-devicons.",
    "tags": ["icon"],
    "stars": 0
  },
  {
    "name": "ziontee113/icon-picker.nvim",
    "url": "https://github.com/ziontee113/icon-picker.nvim",
    "description": "Help you pick ùë®ùïÉùöª Font Characters, Symbols Œ£, Nerd Font Icons Óò´ & Emojis ‚ú®.",
    "tags": ["icon"],
    "stars": 0
  },
  {
    "name": "ekickx/clipboard-image.nvim",
    "url": "https://github.com/ekickx/clipboard-image.nvim",
    "description": "Neovim Lua plugin to paste image from clipboard.",
    "tags": ["media"],
    "stars": 0
  },
  {
    "name": "niuiic/cp-image.nvim",
    "url": "https://github.com/niuiic/cp-image.nvim",
    "description": "Paste image from clipboard and insert the reference code.",
    "tags": ["media"],
    "stars": 0
  },
  {
    "name": "askfiy/nvim-picgo",
    "url": "https://github.com/askfiy/nvim-picgo",
    "description": "A picgo-core-based Neovim plugin, written in Lua, that allows you to upload images to the image bed, which means you can view your images from anywhere on the internet.",
    "tags": ["media"],
    "stars": 0
  },
  {
    "name": "gwatcha/reaper-keys",
    "url": "https://github.com/gwatcha/reaper-keys",
    "description": "Modal keybindings for Reaper DAW.",
    "tags": ["media"],
    "stars": 0
  },
  {
    "name": "madskjeldgaard/reaper-nvim",
    "url": "https://github.com/madskjeldgaard/reaper-nvim",
    "description": "Remote control Reaper DAW from Neovim.",
    "tags": ["media"],
    "stars": 0
  },
  {
    "name": "davidgranstrom/scnvim",
    "url": "https://github.com/davidgranstrom/scnvim",
    "description": "Neovim frontend for SuperCollider.",
    "tags": ["media"],
    "stars": 0
  },
  {
    "name": "andweeb/presence.nvim",
    "url": "https://github.com/andweeb/presence.nvim",
    "description": "Fast and lite Discord Rich Presence plugin written in Lua.",
    "tags": ["media"],
    "stars": 0
  },
  {
    "name": "Chaitanyabsrip/present.nvim",
    "url": "https://github.com/Chaitanyabsprip/present.nvim",
    "description": "A Presentation plugin written in Lua.",
    "tags": ["media"],
    "stars": 0
  },
  {
    "name": "krady21/compiler-explorer.nvim",
    "url": "https://github.com/krady21/compiler-explorer.nvim",
    "description": "Async Lua plugin for interacting with [compiler-explorer](https://godbolt.org/).",
    "tags": ["media"],
    "stars": 0
  },
  {
    "name": "samodostal/image.nvim",
    "url": "https://github.com/samodostal/image.nvim",
    "description": "Image Viewer as ASCII Art.",
    "tags": ["media"],
    "stars": 0
  },
  {
    "name": "adelarsq/image_preview.nvim",
    "url": "https://github.com/adelarsq/image_preview.nvim",
    "description": "Image preview based on terminal's Image Protocol support.",
    "tags": ["media"],
    "stars": 0
  },
  {
    "name": "0styx0/abbreinder.nvim",
    "url": "https://github.com/0styx0/abbreinder.nvim",
    "description": "Abbreviation reminders (Neovim >= 0.5).",
    "tags": ["note taking"],
    "stars": 0
  },
  {
    "name": "jakewvincent/mkdnflow.nvim",
    "url": "https://github.com/jakewvincent/mkdnflow.nvim",
    "description": "Fluent markdown notebook navigation & management (create links, follow links, create and manage to-do lists, reference bib files, and more).",
    "tags": ["note taking"],
    "stars": 0
  },
  {
    "name": "oberblastmeister/neuron.nvim",
    "url": "https://github.com/oberblastmeister/neuron.nvim",
    "description": "Note taking plugin for neuron that integrates with telescope.nvim.",
    "tags": ["note taking"],
    "stars": 0
  },
  {
    "name": "jbyuki/nabla.nvim",
    "url": "https://github.com/jbyuki/nabla.nvim",
    "description": "Take your scientific notes.",
    "tags": ["note taking"],
    "stars": 0
  },
  {
    "name": "nvim-neorg/neorg",
    "url": "https://github.com/nvim-neorg/neorg",
    "description": "Modernity meets insane extensibility. The future of organizing your life.",
    "tags": ["note taking"],
    "stars": 0
  },
  {
    "name": "nvim-orgmode/orgmode",
    "url": "https://github.com/nvim-orgmode/orgmode",
    "description": "Orgmode clone written in Lua (Neovim >= 0.5).",
    "tags": ["note taking"],
    "stars": 0
  },
  {
    "name": "NFrid/due.nvim",
    "url": "https://github.com/NFrid/due.nvim",
    "description": "Displays due for a date string as a virtual text.",
    "tags": ["note taking"],
    "stars": 0
  },
  {
    "name": "jbyuki/venn.nvim",
    "url": "https://github.com/jbyuki/venn.nvim",
    "description": "Draw ASCII diagrams.",
    "tags": ["note taking"],
    "stars": 0
  },
  {
    "name": "stevearc/gkeep.nvim",
    "url": "https://github.com/stevearc/gkeep.nvim",
    "description": "Google Keep integration.",
    "tags": ["note taking"],
    "stars": 0
  },
  {
    "name": "renerocksai/telekasten.nvim",
    "url": "https://github.com/renerocksai/telekasten.nvim",
    "description": "A Neovim (lua) plugin for working with a text-based, markdown zettelkasten / wiki and mixing it with a journal, based on telescope.nvim.",
    "tags": ["note taking"],
    "stars": 0
  },
  {
    "name": "mickael-menu/zk-nvim",
    "url": "https://github.com/mickael-menu/zk-nvim",
    "description": "Neovim extension for zk, a plain text note-taking assistant.",
    "tags": ["note taking"],
    "stars": 0
  },
  {
    "name": "chrsm/impulse.nvim",
    "url": "https://github.com/chrsm/impulse.nvim",
    "description": "Read Notion.so notes.",
    "tags": ["note taking"],
    "stars": 0
  },
  {
    "name": "epwalsh/obsidian.nvim",
    "url": "https://github.com/epwalsh/obsidian.nvim",
    "description": "Plugin for Obsidian, written in Lua.",
    "tags": ["note taking"],
    "stars": 0
  },
  {
    "name": "jghauser/papis.nvim",
    "url": "https://github.com/jghauser/papis.nvim",
    "description": "Manage your bibliography from within your favourite editor.",
    "tags": ["note taking"],
    "stars": 0
  },
  {
    "name": "ostralyan/scribe.nvim",
    "url": "https://github.com/ostralyan/scribe.nvim",
    "description": "Take notes, easily.",
    "tags": ["note taking"],
    "stars": 0
  },
  {
    "name": "phaazon/mind.nvim",
    "url": "https://github.com/phaazon/mind.nvim",
    "description": "The power of trees at your fingertips.",
    "tags": ["note taking"],
    "stars": 0
  },
  {
    "name": "RutaTang/quicknote.nvim",
    "url": "https://github.com/RutaTang/quicknote.nvim",
    "description": "Quickly take notes, in-place.",
    "tags": ["note taking"],
    "stars": 0
  },
  {
    "name": "jghauser/mkdir.nvim",
    "url": "https://github.com/jghauser/mkdir.nvim",
    "description": "Automatically create missing directories when saving files.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "matbme/JABS.nvim",
    "url": "https://github.com/matbme/JABS.nvim",
    "description": "Pretty and minimal buffer switcher window.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "j-morano/buffer_manager.nvim",
    "url": "https://github.com/j-morano/buffer_manager.nvim",
    "description": "Add one or more buffers, reorder them, save them inside a file or just delete them very easily from a small floating window.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "clojure-vim/jazz.nvim",
    "url": "https://github.com/clojure-vim/jazz.nvim",
    "description": "Acid + Impromptu = Jazz.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "sudormrfbin/cheatsheet.nvim",
    "url": "https://github.com/sudormrfbin/cheatsheet.nvim",
    "description": "Searchable cheatsheet.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "code-biscuits/nvim-biscuits",
    "url": "https://github.com/code-biscuits/nvim-biscuits",
    "description": "A Neovim port of Assorted Biscuits. Ends up with more supported languages too.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "Pocco81/AbbrevMan.nvim",
    "url": "https://github.com/Pocco81/AbbrevMan.nvim",
    "description": "Manage Vim abbreviations.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "kazhala/close-buffers.nvim",
    "url": "https://github.com/kazhala/close-buffers.nvim",
    "description": "Delete multiple Vim buffers based on different conditions.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "rktjmp/paperplanes.nvim",
    "url": "https://github.com/rktjmp/paperplanes.nvim",
    "description": "Post selections or buffers to online paste bins.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "rcarriga/nvim-notify",
    "url": "https://github.com/rcarriga/nvim-notify",
    "description": "A fancy, configurable, notification manager.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "folke/noice.nvim",
    "url": "https://github.com/folke/noice.nvim",
    "description": "Highly experimental plugin that completely replaces the UI for messages, cmdline and the popupmenu.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "sQVe/bufignore.nvim",
    "url": "https://github.com/sQVe/bufignore.nvim",
    "description": "Unlist hidden buffers matching specified ignore sources.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "saifulapm/chartoggle.nvim",
    "url": "https://github.com/saifulapm/chartoggle.nvim",
    "description": "Toggle any character at end of line.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "stevearc/dressing.nvim",
    "url": "https://github.com/stevearc/dressing.nvim",
    "description": "Improve the built-in `vim.ui` interfaces with telescope, fzf, etc.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "gaborvecsei/cryptoprice.nvim",
    "url": "https://github.com/gaborvecsei/cryptoprice.nvim",
    "description": "Check the price of the defined cryptocurrencies.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "jghauser/fold-cycle.nvim",
    "url": "https://github.com/jghauser/fold-cycle.nvim",
    "description": "Cycle folds open or closed.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "rgroli/other.nvim",
    "url": "https://github.com/rgroli/other.nvim",
    "description": "Open alternative files for the current buffer.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "toppair/reach.nvim",
    "url": "https://github.com/toppair/reach.nvim",
    "description": "Buffer, mark, tabpage switcher.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "axieax/urlview.nvim",
    "url": "https://github.com/axieax/urlview.nvim",
    "description": "Browse all URLs in the current buffer.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "nkakouros-original/numbers.nvim",
    "url": "https://github.com/nkakouros-original/numbers.nvim",
    "description": "Toggle relativenumber whenever it makes sense.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "ghillb/cybu.nvim",
    "url": "https://github.com/ghillb/cybu.nvim",
    "description": "Displays a notification window with context when cycling buffers.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "crusj/bookmarks.nvim",
    "url": "https://github.com/crusj/bookmarks.nvim",
    "description": "Remember file locations and sort by time and frequency.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "xiyaowong/virtcolumn.nvim",
    "url": "https://github.com/xiyaowong/virtcolumn.nvim",
    "description": "Display a line as colorcolumn.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "m-demare/attempt.nvim",
    "url": "https://github.com/m-demare/attempt.nvim",
    "description": "Manage and run temporary buffers.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "kevinhwang91/nvim-ufo",
    "url": "https://github.com/kevinhwang91/nvim-ufo",
    "description": "Ultra fold with modern looking and performance boosting.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "xiyaowong/link-visitor.nvim",
    "url": "https://github.com/xiyaowong/link-visitor.nvim",
    "description": "Let me help you open the links.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "sitiom/nvim-numbertoggle",
    "url": "https://github.com/sitiom/nvim-numbertoggle",
    "description": "Neovim plugin to automatically toggle between relative and absolute line numbers.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "anuvyklack/fold-preview",
    "url": "https://github.com/anuvyklack/fold-preview.nvim",
    "description": "Preview closed fold without opening it.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "nguyenvukhang/nvim-toggler",
    "url": "https://github.com/nguyenvukhang/nvim-toggler",
    "description": "Invert text, such as toggling between `true` and `false`.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "CosmicNvim/cosmic-ui",
    "url": "https://github.com/CosmicNvim/cosmic-ui",
    "description": "Cosmic-UI is a simple wrapper around specific Vim functionality. Built in order to provide a quick and easy way to create a Cosmic UI experience with Neovim!",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "AckslD/messages.nvim",
    "url": "https://github.com/AckslD/messages.nvim",
    "description": "Capture and show any messages in a customisable (floating) buffer.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "jbyuki/instant.nvim",
    "url": "https://github.com/jbyuki/instant.nvim",
    "description": "A collaborative editing plugin written in Lua with no dependencies.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "numToStr/BufOnly.nvim",
    "url": "https://github.com/numToStr/BufOnly.nvim",
    "description": "Lua/Neovim port of BufOnly.vim with some changes.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "zbirenbaum/neodim",
    "url": "https://github.com/zbirenbaum/neodim",
    "description": "Dimming the highlights of unused functions, variables, parameters, and more.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "bfredl/nvim-miniyank",
    "url": "https://github.com/bfredl/nvim-miniyank",
    "description": "The killring-alike plugin with no default mappings.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "chrisgrieser/nvim-genghis",
    "url": "https://github.com/chrisgrieser/nvim-genghis",
    "description": "Convenience file operations, written in Lua.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "chrisgrieser/nvim-recorder",
    "url": "https://github.com/chrisgrieser/nvim-recorder",
    "description": "Simplifying and improving how you interact with macros.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.animate",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-animate.md",
    "description": "Module of `mini.nvim` to add out of the box animations for common built-in actions (cursor movement, scroll, resize, window open/close).",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "figsoda/nix-develop.nvim",
    "url": "https://github.com/figsoda/nix-develop.nvim",
    "description": "Run `nix develop` without restarting Neovim.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "yaocccc/nvim-foldsign",
    "url": "https://github.com/yaocccc/nvim-foldsign",
    "description": "Display folds on sign column.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "tenxsoydev/nx.nvim",
    "url": "https://github.com/tenxsoydev/nx.nvim",
    "description": "Neovim API utility wrapper for more convenience with Lua keymaps, highlights, autocommands and options.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "zdcthomas/yop.nvim",
    "url": "https://github.com/zdcthomas/yop.nvim",
    "description": "Easily create your own operators (like `d` and `y`).",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "cpea2506/relative-toggle.nvim",
    "url": "https://github.com/cpea2506/relative-toggle.nvim",
    "description": "Toggles smoothly between number and relative numbers, supporting various number combinations, highly customizable.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "nvim-early-retirement",
    "url": "https://github.com/chrisgrieser/nvim-early-retirement",
    "description": "Send buffers into early retirement by automatically closing them after x minutes of inactivity.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "hbac.nvim",
    "url": "https://github.com/axkirillov/hbac.nvim",
    "description": "Automatically close buffers you are not working on.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "ecthelionvi/NeoComposer.nvim",
    "url": "https://github.com/ecthelionvi/NeoComposer.nvim",
    "description": "Simplify macro management, enhance productivity, and create harmonious workflows.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "LukasPietzschmann/telescope-tabs",
    "url": "https://github.com/LukasPietzschmann/telescope-tabs",
    "description": "Quickly navigate between tabs using telescope.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "RutaTang/compter.nvim",
    "url": "https://github.com/RutaTang/compter.nvim",
    "description": "Power and extend the ability of `<C-a>` and `<C-x>` with customized patterns.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "reggie/licenses.nvim",
    "url": "https://git.sr.ht/~reggie/licenses.nvim",
    "description": "Insert and write license headers and/or files.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "yagiziskirik/AirSupport.nvim",
    "url": "https://github.com/yagiziskirik/AirSupport.nvim",
    "description": "Searchable reminder window for your custom shortcuts and commands.",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "darksinge/neodash.nvim",
    "url": "https://github.com/darksinge/neodash.nvim",
    "description": "A utility library providing 'lodash' like functions for Lua",
    "tags": ["utility"],
    "stars": 0
  },
  {
    "name": "LoricAndre/OneTerm.nvim",
    "url": "https://github.com/LoricAndre/OneTerm.nvim",
    "description": "Plugin framework for running commands in the terminal.",
    "tags": ["terminal integration"],
    "stars": 0
  },
  {
    "name": "nikvdp/neomux",
    "url": "https://github.com/nikvdp/neomux",
    "description": "Control Neovim from shells running inside Neovim.",
    "tags": ["terminal integration"],
    "stars": 0
  },
  {
    "name": "willothy/flatten.nvim",
    "url": "https://github.com/willothy/flatten.nvim",
    "description": "Open files from terminal buffers in your current Neovim instance instead of launching a nested instance.",
    "tags": ["terminal integration"],
    "stars": 0
  },
  {
    "name": "akinsho/nvim-toggleterm.lua",
    "url": "https://github.com/akinsho/nvim-toggleterm.lua",
    "description": "A Neovim Lua plugin to help easily manage multiple terminal windows.",
    "tags": ["terminal integration"],
    "stars": 0
  },
  {
    "name": "norcalli/nvim-terminal.lua",
    "url": "https://github.com/norcalli/nvim-terminal.lua",
    "description": "A high performance filetype mode which leverages conceal and highlights your buffer with the correct color codes.",
    "tags": ["terminal integration"],
    "stars": 0
  },
  {
    "name": "numToStr/FTerm.nvim",
    "url": "https://github.com/numToStr/FTerm.nvim",
    "description": "No nonsense floating terminal written in Lua.",
    "tags": ["terminal integration"],
    "stars": 0
  },
  {
    "name": "pianocomposer321/consolation.nvim",
    "url": "https://github.com/pianocomposer321/consolation.nvim",
    "description": "A general-purpose terminal wrapper and management plugin, written in Lua.",
    "tags": ["terminal integration"],
    "stars": 0
  },
  {
    "name": "jghauser/kitty-runner.nvim",
    "url": "https://github.com/jghauser/kitty-runner.nvim",
    "description": "Poor man's REPL. Easily send buffer lines and commands to a kitty terminal.",
    "tags": ["terminal integration"],
    "stars": 0
  },
  {
    "name": "jlesquembre/nterm.nvim",
    "url": "https://github.com/jlesquembre/nterm.nvim",
    "description": "Interact with the terminal, with notifications.",
    "tags": ["terminal integration"],
    "stars": 0
  },
  {
    "name": "s1n7ax/nvim-terminal",
    "url": "https://github.com/s1n7ax/nvim-terminal",
    "description": "A simple & easy to use multi-terminal plugin.",
    "tags": ["terminal integration"],
    "stars": 0
  },
  {
    "name": "m00qek/baleia.nvim",
    "url": "https://github.com/m00qek/baleia.nvim",
    "description": "Colorize text with ANSI escape sequences (8, 16, 256 or TrueColor).",
    "tags": ["terminal integration"],
    "stars": 0
  },
  {
    "name": "samjwill/nvim-unception",
    "url": "https://github.com/samjwill/nvim-unception",
    "description": "Automatic unnesting of Neovim sessions started from terminal buffers.",
    "tags": ["terminal integration"],
    "stars": 0
  },
  {
    "name": "nyngwang/NeoTerm.lua",
    "url": "https://github.com/nyngwang/NeoTerm.lua",
    "description": "Attach a terminal for each **buffer**, now with stable toggle and astonishing cursor restoring.",
    "tags": ["terminal integration"],
    "stars": 0
  },
  {
    "name": "idanarye/nvim-channelot",
    "url": "https://github.com/idanarye/nvim-channelot",
    "description": "Operate Neovim jobs from Lua coroutines.",
    "tags": ["terminal integration"],
    "stars": 0
  },
  {
    "name": "chomosuke/term-edit.nvim",
    "url": "https://github.com/chomosuke/term-edit.nvim",
    "description": "Allowing you to edit your command in the terminal just like any other buffer.",
    "tags": ["terminal integration"],
    "stars": 0
  },
  {
    "name": "mfussenegger/nvim-dap",
    "url": "https://github.com/mfussenegger/nvim-dap",
    "description": "Debug Adapter Protocol client implementation.",
    "tags": ["debugging"],
    "stars": 0
  },
  {
    "name": "sakhnik/nvim-gdb",
    "url": "https://github.com/sakhnik/nvim-gdb",
    "description": "Thin wrapper for GDB, LLDB, PDB/PDB++ and BashDB.",
    "tags": ["debugging"],
    "stars": 0
  },
  {
    "name": "rcarriga/nvim-dap-ui",
    "url": "https://github.com/rcarriga/nvim-dap-ui",
    "description": "A UI for nvim-dap.",
    "tags": ["debugging"],
    "stars": 0
  },
  {
    "name": "Pocco81/DAPInstall.nvim",
    "url": "https://github.com/Pocco81/DAPInstall.nvim",
    "description": "Manage several debuggers for nvim-dap.",
    "tags": ["debugging"],
    "stars": 0
  },
  {
    "name": "Weissle/persistent-breakpoints.nvim",
    "url": "https://github.com/Weissle/persistent-breakpoints.nvim",
    "description": "Persistent breakpoints for nvim-dap.",
    "tags": ["debugging"],
    "stars": 0
  },
  {
    "name": "ofirgall/goto-breakpoints.nvim",
    "url": "https://github.com/ofirgall/goto-breakpoints.nvim",
    "description": "Cycle between breakpoints for nvim-dap.",
    "tags": ["debugging"],
    "stars": 0
  },
  {
    "name": "andrewferrier/debugprint.nvim",
    "url": "https://github.com/andrewferrier/debugprint.nvim",
    "description": "Debugging the print() way.",
    "tags": ["debugging"],
    "stars": 0
  },
  {
    "name": "t-troebst/perfanno.nvim",
    "url": "https://github.com/t-troebst/perfanno.nvim",
    "description": "Annotate your code with callgraph profiling data. Native support for perf, flamegraph and the LuaJit profiler.",
    "tags": ["debugging"],
    "stars": 0
  },
  {
    "name": "kevinhwang91/nvim-bqf",
    "url": "https://github.com/kevinhwang91/nvim-bqf",
    "description": "The goal of nvim-bqf is to make Neovim's quickfix window better.",
    "tags": ["debugging", "quickfix"],
    "stars": 0
  },
  {
    "name": "gitlab.com/yorickpeterse/nvim-pqf",
    "url": "https://gitlab.com/yorickpeterse/nvim-pqf",
    "description": "Prettier quickfix/location list windows.",
    "tags": ["debugging", "quickfix"],
    "stars": 0
  },
  {
    "name": "nyngwang/NeoWell.lua",
    "url": "https://github.com/nyngwang/NeoWell.lua",
    "description": "Sometimes you will want to fix some lines later. Store lines into qf with some note so you know what to do when you really want to fix it.",
    "tags": ["debugging", "quickfix"],
    "stars": 0
  },
  {
    "name": "David-Kunz/jester",
    "url": "https://github.com/David-Kunz/jester",
    "description": "Easily run and debug Jest tests.",
    "tags": ["test"],
    "stars": 0
  },
  {
    "name": "klen/nvim-test",
    "url": "https://github.com/klen/nvim-test",
    "description": "A Neovim wrapper for running tests.",
    "tags": ["test"],
    "stars": 0
  },
  {
    "name": "nvim-neotest/neotest",
    "url": "https://github.com/nvim-neotest/neotest",
    "description": "An extensible framework for interacting with tests within Neovim.",
    "tags": ["test"],
    "stars": 0
  },
  {
    "name": "andythigpen/nvim-coverage",
    "url": "https://github.com/andythigpen/nvim-coverage",
    "description": "Displays coverage information in the sign column.",
    "tags": ["test"],
    "stars": 0
  },
  {
    "name": "michaelb/sniprun",
    "url": "https://github.com/michaelb/sniprun",
    "description": "Run parts of code of any language directly from Neovim.",
    "tags": ["code runner"],
    "stars": 0
  },
  {
    "name": "pianocomposer321/yabs.nvim",
    "url": "https://github.com/pianocomposer321/yabs.nvim",
    "description": "Yet Another Build System, written in Lua.",
    "tags": ["code runner"],
    "stars": 0
  },
  {
    "name": "CRAG666/code_runner.nvim",
    "url": "https://github.com/CRAG666/code_runner.nvim",
    "description": "The best code runner you could have, with super powers.",
    "tags": ["code runner"],
    "stars": 0
  },
  {
    "name": "is0n/jaq-nvim",
    "url": "https://github.com/is0n/jaq-nvim",
    "description": "Just Another Quickrun Plugin in Lua.",
    "tags": ["code runner"],
    "stars": 0
  },
  {
    "name": "jedrzejboczar/toggletasks.nvim",
    "url": "https://github.com/jedrzejboczar/toggletasks.nvim",
    "description": "Task runner with JSON/YAML configs, using toggleterm.nvim and telescope.nvim.",
    "tags": ["code runner"],
    "stars": 0
  },
  {
    "name": "EthanJWright/vs-tasks.nvim",
    "url": "https://github.com/EthanJWright/vs-tasks.nvim",
    "description": "Telescope picker for VSCode style tasks.",
    "tags": ["code runner"],
    "stars": 0
  },
  {
    "name": "stevearc/overseer.nvim",
    "url": "https://github.com/stevearc/overseer.nvim",
    "description": "A task runner and job management plugin.",
    "tags": ["code runner"],
    "stars": 0
  },
  {
    "name": "smzm/hydrovim",
    "url": "https://github.com/smzm/hydrovim",
    "description": "Run python code inside Neovim.",
    "tags": ["code runner"],
    "stars": 0
  },
  {
    "name": "desdic/greyjoy.nvim",
    "url": "https://github.com/desdic/greyjoy.nvim",
    "description": "A modular task runner for Makefiles, vscode tasks, kitchen etc.",
    "tags": ["code runner"],
    "stars": 0
  },
  {
    "name": "Shatur/neovim-tasks",
    "url": "https://github.com/Shatur/neovim-tasks",
    "description": "A stateful task manager focused on integration with build systems.",
    "tags": ["code runner"],
    "stars": 0
  },
  {
    "name": "milanglacier/yarepl.nvim",
    "url": "https://github.com/milanglacier/yarepl.nvim",
    "description": "Yet Another REPL, flexible, supporting multiple paradigms to interact with REPLs, and native dot repeat without other dependencies.",
    "tags": ["code runner"],
    "stars": 0
  },
  {
    "name": "hkupty/iron.nvim",
    "url": "https://github.com/hkupty/iron.nvim",
    "description": "Interactive REPLs of over 30 languages embedded.",
    "tags": ["code runner"],
    "stars": 0
  },
  {
    "name": "Civitasv/cmake-tools.nvim",
    "url": "https://github.com/Civitasv/cmake-tools.nvim",
    "description": "CMake integration.",
    "tags": ["code runner"],
    "stars": 0
  },
  {
    "name": "idanarye/nvim-moonicipal",
    "url": "https://github.com/idanarye/nvim-moonicipal",
    "description": "Task runner with focus on rapidly changing personal tasks.",
    "tags": ["code runner"],
    "stars": 0
  },
  {
    "name": "MarcHamamji/runner.nvim",
    "url": "https://github.com/MarcHamamji/runner.nvim",
    "description": "A customizable Lua code runner.",
    "tags": ["code runner"],
    "stars": 0
  },
  {
    "name": "google/executor.nvim",
    "url": "https://github.com/google/executor.nvim",
    "description": "Allows you to run command line tasks in the background and be notified of results.",
    "tags": ["code runner"],
    "stars": 0
  },
  {
    "name": "folke/neodev.nvim",
    "url": "https://github.com/folke/neodev.nvim",
    "description": "Dev setup for init.lua and plugin development with full signature help, docs and completion for the Neovim Lua API.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "nvim-neorocks/luarocks-tag-release",
    "url": "https://github.com/nvim-neorocks/luarocks-tag-release",
    "description": "A GitHub action that publishes your Neovim plugins to LuaRocks.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "svermeulen/vimpeccable",
    "url": "https://github.com/svermeulen/vimpeccable",
    "description": "Commands to help write your .vimrc in Lua or any Lua based language.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "nanotee/nvim-lua-guide",
    "url": "https://github.com/nanotee/nvim-lua-guide",
    "description": "A guide to using Lua in Neovim.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "rafcamlet/nvim-luapad",
    "url": "https://github.com/rafcamlet/nvim-luapad",
    "description": "Interactive real time Neovim scratchpad for embedded Lua engine - Type and watch!.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "nvim-lua/plenary.nvim",
    "url": "https://github.com/nvim-lua/plenary.nvim",
    "description": "Plenary: full; complete; entire; absolute; unqualified. All the Lua functions I don't want to write twice.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "nvim-lua/popup.nvim",
    "url": "https://github.com/nvim-lua/popup.nvim",
    "description": "An implementation of the Popup API from Vim.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "tjdevries/vlog.nvim",
    "url": "https://github.com/tjdevries/vlog.nvim",
    "description": "Single file, no dependency, easy copy & paste log file to add to your Neovim Lua plugins.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "bfredl/nvim-luadev",
    "url": "https://github.com/bfredl/nvim-luadev",
    "description": "REPL/debug console Lua plugins. The `:Luadev` command will open an scratch window which will show output from executing Lua code.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "jbyuki/one-small-step-for-vimkind",
    "url": "https://github.com/jbyuki/one-small-step-for-vimkind",
    "description": "An adapter for the Neovim Lua language. It allows you to debug any Lua code running in a Neovim instance (A Lua plugin that can debug Neovim Lua plugins).",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "kkharji/sqlite.lua",
    "url": "https://github.com/kkharji/sqlite.lua",
    "description": "SQLite/LuaJIT binding for Lua and Neovim.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "MunifTanjim/nui.nvim",
    "url": "https://github.com/MunifTanjim/nui.nvim",
    "description": "UI Component Library.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.doc",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-doc.md",
    "description": "Module of `mini.nvim` for generation of help files from EmmyLua-like annotations. Allows flexible customization of output via hook functions.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "nanotee/luv-vimdocs",
    "url": "https://github.com/nanotee/luv-vimdocs",
    "description": "The luv docs in vimdoc format.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "milisims/nvim-luaref",
    "url": "https://github.com/milisims/nvim-luaref",
    "description": "A reference for builtin Lua functions.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.test",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-test.md",
    "description": "Module of `mini.nvim` with framework for writing extensive Neovim plugin tests. Supports hierarchical tests, hooks, parametrization, filtering, screen tests, \"busted-style\" emulation, customizable reporters, and more.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "miversen33/import.nvim",
    "url": "https://github.com/miversen33/import.nvim",
    "description": "A safe require replacement with niceties.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "ray-x/guihua.lua",
    "url": "https://github.com/ray-x/guihua.lua",
    "description": "A Lua UI library. Includes a fzy search bar, list view and tree view modules.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "anuvyklack/animation.nvim",
    "url": "https://github.com/anuvyklack/animation.nvim",
    "description": "Create animations.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "NFrid/treesitter-utils",
    "url": "https://github.com/NFrid/treesitter-utils",
    "description": "Some useful Treesitter methods.",
    "tags": ["neovim lua development"],
    "stars": 0
  },
  {
    "name": "Olical/aniseed",
    "url": "https://github.com/Olical/aniseed",
    "description": "Configure and extend Neovim with Fennel (Lisp to Lua).",
    "tags": ["fennel"],
    "stars": 0
  },
  {
    "name": "Olical/conjure",
    "url": "https://github.com/Olical/conjure",
    "description": "Interactive evaluation (Clojure, Fennel, Janet, Racket, Hy, MIT Scheme, Guile).",
    "tags": ["fennel"],
    "stars": 0
  },
  {
    "name": "rktjmp/hotpot.nvim",
    "url": "https://github.com/rktjmp/hotpot.nvim",
    "description": "Seamless, transparent Fennel inside Neovim.",
    "tags": ["fennel"],
    "stars": 0
  },
  {
    "name": "udayvir-singh/tangerine.nvim",
    "url": "https://github.com/udayvir-singh/tangerine.nvim",
    "description": "Sweet :tangerine: Fennel integration, aims to be as fast as possible.",
    "tags": ["fennel"],
    "stars": 0
  },
  {
    "name": "udayvir-singh/hibiscus.nvim",
    "url": "https://github.com/udayvir-singh/hibiscus.nvim",
    "description": "Flavored :hibiscus: Fennel macro library.",
    "tags": ["fennel"],
    "stars": 0
  },
  {
    "name": "vuki656/package-info.nvim",
    "url": "https://github.com/vuki656/package-info.nvim",
    "description": "Display latest package version as virtual text in package.json.",
    "tags": ["dependency management"],
    "stars": 0
  },
  {
    "name": "Saecki/crates.nvim",
    "url": "https://github.com/Saecki/crates.nvim",
    "description": "Rust dependency management for `Cargo.toml`.",
    "tags": ["dependency management"],
    "stars": 0
  },
  {
    "name": "f-person/git-blame.nvim",
    "url": "https://github.com/f-person/git-blame.nvim",
    "description": "Show git blame info.",
    "tags": ["git"],
    "stars": 0
  },
  {
    "name": "lewis6991/gitsigns.nvim",
    "url": "https://github.com/lewis6991/gitsigns.nvim",
    "description": "Git integration: signs, hunk actions, blame, etc.",
    "tags": ["git"],
    "stars": 0
  },
  {
    "name": "TimUntersberger/neogit",
    "url": "https://github.com/TimUntersberger/neogit",
    "description": "A Magit clone that may change some things to fit the Vim philosophy.",
    "tags": ["git"],
    "stars": 0
  },
  {
    "name": "tveskag/nvim-blame-line",
    "url": "https://github.com/tveskag/nvim-blame-line",
    "description": "A small plugin that uses neovims virtual text to print git blame info at the end of the current line.",
    "tags": ["git"],
    "stars": 0
  },
  {
    "name": "ruifm/gitlinker.nvim",
    "url": "https://github.com/ruifm/gitlinker.nvim",
    "description": "Generate shareable file permalinks for several git hosts. Inspired by tpope/vim-fugitive's :GBrowse.",
    "tags": ["git"],
    "stars": 0
  },
  {
    "name": "tanvirtin/vgit.nvim",
    "url": "https://github.com/tanvirtin/vgit.nvim",
    "description": "Visual Git Plugin to enhance your git experience.",
    "tags": ["git"],
    "stars": 0
  },
  {
    "name": "sindrets/diffview.nvim",
    "url": "https://github.com/sindrets/diffview.nvim",
    "description": "Single tabpage interface for easily cycling through diffs for all modified files for any git rev.",
    "tags": ["git"],
    "stars": 0
  },
  {
    "name": "kdheepak/lazygit.nvim",
    "url": "https://github.com/kdheepak/lazygit.nvim",
    "description": "Plugin for calling lazygit.",
    "tags": ["git"],
    "stars": 0
  },
  {
    "name": "AckslD/nvim-gfold.lua",
    "url": "https://github.com/AckslD/nvim-gfold.lua",
    "description": "Plugin using [gfold](https://github.com/nickgerace/gfold) to switch repo and have statusline component.",
    "tags": ["git"],
    "stars": 0
  },
  {
    "name": "akinsho/git-conflict.nvim",
    "url": "https://github.com/akinsho/git-conflict.nvim",
    "description": "A plugin to visualise and resolve merge conflicts.",
    "tags": ["git"],
    "stars": 0
  },
  {
    "name": "aaronhallaert/advanced-git-search.nvim",
    "url": "https://github.com/aaronhallaert/advanced-git-search.nvim",
    "description": "Search your git history by commit content, message and author with Telescope.",
    "tags": ["git"],
    "stars": 0
  },
  {
    "name": "pwntester/octo.nvim",
    "url": "https://github.com/pwntester/octo.nvim",
    "description": "Work with GitHub issues and PRs from Neovim. Just edit the issue description.",
    "tags": ["git", "github"],
    "stars": 0
  },
  {
    "name": "pwntester/codeql.nvim",
    "url": "https://github.com/pwntester/codeql.nvim",
    "description": "Neovim plugin to help writing and testing CodeQL queries.",
    "tags": ["git", "github"],
    "stars": 0
  },
  {
    "name": "ldelossa/gh.nvim",
    "url": "https://github.com/ldelossa/gh.nvim",
    "description": "A fully featured GitHub integration for performing code reviews.",
    "tags": ["git", "github"],
    "stars": 0
  },
  {
    "name": "topaxi/gh-actions.nvim",
    "url": "https://github.com/topaxi/gh-actions.nvim",
    "description": "View and dispatch GitHub Actions workflow runs.",
    "tags": ["git", "github"],
    "stars": 0
  },
  {
    "name": "phaazon/hop.nvim",
    "url": "https://github.com/phaazon/hop.nvim",
    "description": "Hop is an EasyMotion-like plugin allowing you to jump anywhere in a document with as few keystrokes as possible.",
    "tags": ["motion"],
    "stars": 0
  },
  {
    "name": "ggandor/lightspeed.nvim",
    "url": "https://github.com/ggandor/lightspeed.nvim",
    "description": "A Sneak-like plugin offering unparalleled navigation speed via ahead-of-time displayed labels, that eliminate the pause between entering the search pattern and selecting the target.",
    "tags": ["motion"],
    "stars": 0
  },
  {
    "name": "ggandor/leap.nvim",
    "url": "https://github.com/ggandor/leap.nvim",
    "description": "A refined successor of Lightspeed, aiming to establish a widely accepted standard interface extension for moving around in Vim-like editors.",
    "tags": ["motion"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.jump",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-jump.md",
    "description": "Module of `mini.nvim` for smarter jumping to a single character.",
    "tags": ["motion"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.jump2d",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-jump2d.md",
    "description": "Module of `mini.nvim` for smarter jumping within visible lines via iterative label filtering. Supports custom jump targets (spots), labels, hooks, allowed windows and lines, and more.",
    "tags": ["motion"],
    "stars": 0
  },
  {
    "name": "rlane/pounce.nvim",
    "url": "https://github.com/rlane/pounce.nvim",
    "description": "An EasyMotion-like plugin for quick cursor movement using fuzzy search.",
    "tags": ["motion"],
    "stars": 0
  },
  {
    "name": "gen740/SmoothCursor.nvim",
    "url": "https://github.com/gen740/SmoothCursor.nvim",
    "description": "Add fancy sub-cursor to signcolumn to show your scroll or jump direction.",
    "tags": ["motion"],
    "stars": 0
  },
  {
    "name": "edluffy/specs.nvim",
    "url": "https://github.com/edluffy/specs.nvim",
    "description": "A fast and lightweight Neovim Lua plugin to keep an eye on where your cursor has jumped.",
    "tags": ["motion"],
    "stars": 0
  },
  {
    "name": "abecodes/tabout.nvim",
    "url": "https://github.com/abecodes/tabout.nvim",
    "description": "Jump out of brackets, quotes, objects, etc.",
    "tags": ["motion"],
    "stars": 0
  },
  {
    "name": "linty-org/readline.nvim",
    "url": "https://github.com/linty-org/readline.nvim",
    "description": "Readline keyboard shortcuts.",
    "tags": ["motion"],
    "stars": 0
  },
  {
    "name": "woosaaahh/sj.nvim",
    "url": "https://github.com/woosaaahh/sj.nvim",
    "description": "Search based navigation combined with quick jump features.",
    "tags": ["motion"],
    "stars": 0
  },
  {
    "name": "Weissle/easy-action",
    "url": "https://github.com/Weissle/easy-action",
    "description": "Easily perform an action on where you can see.",
    "tags": ["motion"],
    "stars": 0
  },
  {
    "name": "cbochs/portal.nvim",
    "url": "https://github.com/cbochs/portal.nvim",
    "description": "Build upon and enhance existing jumplist motions (i.e. `<c-i>` and `<c-o>`).",
    "tags": ["motion"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.bracketed",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-bracketed.md",
    "description": "Module of `mini.nvim` to go forward/backward with square brackets.",
    "tags": ["motion"],
    "stars": 0
  },
  {
    "name": "liangxianzhe/nap.nvim",
    "url": "https://github.com/liangxianzhe/nap.nvim",
    "description": "Jump between next/previous buffer, tab, diagnostic, etc, with a single key.",
    "tags": ["motion"],
    "stars": 0
  },
  {
    "name": "chrisgrieser/nvim-spider",
    "url": "https://github.com/chrisgrieser/nvim-spider",
    "description": "Use the w, e, b motions like a spider. Considers camelCase and skips insignificant punctuation.",
    "tags": ["motion"],
    "stars": 0
  },
  {
    "name": "mfussenegger/nvim-ts-hint-textobject",
    "url": "https://github.com/mfussenegger/nvim-ts-hint-textobject",
    "description": "Region selection with hints on the AST nodes of a document powered by Treesitter.",
    "tags": ["motion", "treesitter based"],
    "stars": 0
  },
  {
    "name": "ziontee113/syntax-tree-surfer",
    "url": "https://github.com/ziontee113/syntax-tree-surfer",
    "description": "Navigate and swap Treesitter's AST Nodes. Step into, step out, step over, step back.",
    "tags": ["motion", "treesitter based"],
    "stars": 0
  },
  {
    "name": "drybalka/tree-climber.nvim",
    "url": "https://github.com/drybalka/tree-climber.nvim",
    "description": "Easy navigation around the Treesitter's tree that works in multi-language files and in normal mode.",
    "tags": ["motion", "treesitter based"],
    "stars": 0
  },
  {
    "name": "folke/which-key.nvim",
    "url": "https://github.com/folke/which-key.nvim",
    "description": "Neovim plugin that shows a popup with possible keybindings of the command you started typing.",
    "tags": ["keybinding"],
    "stars": 0
  },
  {
    "name": "mrjones2014/legendary.nvim",
    "url": "https://github.com/mrjones2014/legendary.nvim",
    "description": "Define your keymaps, commands, and autocommands as simple Lua tables, and create a legend for them at the same time (like VS Code's Command Palette), integrates with `which-key.nvim`.",
    "tags": ["keybinding"],
    "stars": 0
  },
  {
    "name": "Iron-E/nvim-cartographer",
    "url": "https://github.com/Iron-E/nvim-cartographer",
    "description": "a more convenient `:map`ping syntax for Lua environments.",
    "tags": ["keybinding"],
    "stars": 0
  },
  {
    "name": "b0o/mapx.nvim",
    "url": "https://github.com/b0o/mapx.nvim",
    "description": "A simpler key mapping API that mimics Neovim's `:map`-family of commands. Integrates with which-key.nvim.",
    "tags": ["keybinding"],
    "stars": 0
  },
  {
    "name": "LionC/nest.nvim",
    "url": "https://github.com/LionC/nest.nvim",
    "description": "Lua utility to map keys concisely using cascading trees. Also allows binding Lua functions to keys.",
    "tags": ["keybinding"],
    "stars": 0
  },
  {
    "name": "LinArcX/telescope-command-palette.nvim",
    "url": "https://github.com/LinArcX/telescope-command-palette.nvim",
    "description": "Lua plugin to create key-bindings and watch them with telescope.",
    "tags": ["keybinding"],
    "stars": 0
  },
  {
    "name": "slugbyte/unruly-worker",
    "url": "https://github.com/slugbyte/unruly-worker",
    "description": "A ridiculously fun alternative keymap for the workman keyboard layout with Neovim features like LSP support, built and configured with Lua.",
    "tags": ["keybinding"],
    "stars": 0
  },
  {
    "name": "FeiyouG/command_center.nvim",
    "url": "https://github.com/FeiyouG/command_center.nvim",
    "description": "Create and manage keybindings and commands in a more organized manner and search them quickly through Telescope.",
    "tags": ["keybinding"],
    "stars": 0
  },
  {
    "name": "linty-org/key-menu.nvim",
    "url": "https://github.com/linty-org/key-menu.nvim",
    "description": "Key mapping hints in a floating window.",
    "tags": ["keybinding"],
    "stars": 0
  },
  {
    "name": "anuvyklack/hydra.nvim",
    "url": "https://github.com/anuvyklack/hydra.nvim",
    "description": "Create custom submodes and menus. Port of Emacs Hydra.",
    "tags": ["keybinding"],
    "stars": 0
  },
  {
    "name": "anuvyklack/keymap-amend.nvim",
    "url": "https://github.com/anuvyklack/keymap-amend.nvim",
    "description": "Amend the existing keymap.",
    "tags": ["keybinding"],
    "stars": 0
  },
  {
    "name": "max397574/better-escape.nvim",
    "url": "https://github.com/max397574/better-escape.nvim",
    "description": "Create shortcuts to escape insert mode without getting delay.",
    "tags": ["keybinding"],
    "stars": 0
  },
  {
    "name": "Nexmean/caskey.nvim",
    "url": "https://github.com/Nexmean/caskey.nvim",
    "description": "Utility to keymappings configuration using declarative cascading trees, optionally integrates with `which-key`.",
    "tags": ["keybinding"],
    "stars": 0
  },
  {
    "name": "Wansmer/langmapper.nvim",
    "url": "https://github.com/Wansmer/langmapper.nvim",
    "description": "Auto translating your mappings for non-English input methods.",
    "tags": ["keybinding"],
    "stars": 0
  },
  {
    "name": "notomo/gesture.nvim",
    "url": "https://github.com/notomo/gesture.nvim",
    "description": "Mouse gesture plugin.",
    "tags": ["mouse"],
    "stars": 0
  },
  {
    "name": "karb94/neoscroll.nvim",
    "url": "https://github.com/karb94/neoscroll.nvim",
    "description": "Smooth scrolling.",
    "tags": ["scrolling"],
    "stars": 0
  },
  {
    "name": "declancm/cinnamon.nvim",
    "url": "https://github.com/declancm/cinnamon.nvim",
    "description": "Smooth scrolling for any movement command.",
    "tags": ["scrolling"],
    "stars": 0
  },
  {
    "name": "Xuyuanp/scrollbar.nvim",
    "url": "https://github.com/Xuyuanp/scrollbar.nvim",
    "description": "Scrollbar.",
    "tags": ["scrolling", "scrollbar"],
    "stars": 0
  },
  {
    "name": "dstein64/nvim-scrollview",
    "url": "https://github.com/dstein64/nvim-scrollview",
    "description": "Display interactive scrollbars.",
    "tags": ["scrolling", "scrollbar"],
    "stars": 0
  },
  {
    "name": "petertriho/nvim-scrollbar",
    "url": "https://github.com/petertriho/nvim-scrollbar",
    "description": "Extensible scrollbar that shows diagnostics and search results.",
    "tags": ["scrolling", "scrollbar"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.map",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-map.md",
    "description": "Module of `mini.nvim` to show floating window with buffer text overview, scrollbar, and highlights.",
    "tags": ["scrolling", "scrollbar"],
    "stars": 0
  },
  {
    "name": "gorbit99/codewindow.nvim",
    "url": "https://github.com/gorbit99/codewindow.nvim",
    "description": "Minimap plugin, that is closely integrated with treesitter and the builtin LSP to display more information to the user.",
    "tags": ["scrolling", "scrollbar"],
    "stars": 0
  },
  {
    "name": "lewis6991/satellite.nvim",
    "url": "https://github.com/lewis6991/satellite.nvim",
    "description": "Decorate scrollbar.",
    "tags": ["scrolling", "scrollbar"],
    "stars": 0
  },
  {
    "name": "windwp/nvim-ts-autotag",
    "url": "https://github.com/windwp/nvim-ts-autotag",
    "description": "Use treesitter to autoclose and autorename xml,html,jsx tag.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "windwp/nvim-autopairs",
    "url": "https://github.com/windwp/nvim-autopairs",
    "description": "A minimalist autopairs written by Lua.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "ZhiyuanLck/smart-pairs",
    "url": "https://github.com/ZhiyuanLck/smart-pairs",
    "description": "Ultimate smart pairs written by Lua.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.pairs",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-pairs.md",
    "description": "Module of `mini.nvim` for autopairs which has minimal defaults and functionality to do per-key mapping.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "m4xshen/autoclose.nvim",
    "url": "https://github.com/m4xshen/autoclose.nvim",
    "description": "A minimalist autoclose plugin written in Lua.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "altermo/ultimate-autopair.nvim",
    "url": "https://github.com/altermo/ultimate-autopair.nvim",
    "description": "Autopair with extensions.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "utilyre/sentiment.nvim",
    "url": "https://github.com/utilyre/sentiment.nvim",
    "description": "Enhanced matchparen.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "monaqa/dial.nvim",
    "url": "https://github.com/monaqa/dial.nvim",
    "description": "Extended increment/decrement.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "mrjones2014/nvim-ts-rainbow",
    "url": "https://github.com/mrjones2014/nvim-ts-rainbow",
    "description": "Rainbow :rainbow: delimiters using tree-sitter :rainbow:.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "AckslD/nvim-revJ.lua",
    "url": "https://github.com/AckslD/nvim-revJ.lua",
    "description": "Neovim Lua plugin for doing the opposite of join-line (J) for arguments.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "Pocco81/TrueZen.nvim",
    "url": "https://github.com/Pocco81/TrueZen.nvim",
    "description": "Clean and elegant distraction-free writing.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "Pocco81/HighStr.nvim",
    "url": "https://github.com/Pocco81/HighStr.nvim",
    "description": "Highlight visual selections like in a normal document editor!",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "Pocco81/AutoSave.nvim",
    "url": "https://github.com/Pocco81/AutoSave.nvim",
    "description": "Save your work before the world collapses or you type :qa!",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "tmillr/sos.nvim",
    "url": "https://github.com/tmillr/sos.nvim",
    "description": "Automatically save all your modified buffers according to a predefined timeout value.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "folke/zen-mode.nvim",
    "url": "https://github.com/folke/zen-mode.nvim",
    "description": "Distraction-free coding.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "haringsrob/nvim_context_vt",
    "url": "https://github.com/haringsrob/nvim_context_vt",
    "description": "Shows virtual text of the current context.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "nvim-treesitter/nvim-treesitter-context",
    "url": "https://github.com/nvim-treesitter/nvim-treesitter-context",
    "description": "Shows floating hover with the current function/block context.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "mizlan/iswap.nvim",
    "url": "https://github.com/mizlan/iswap.nvim",
    "description": "Interactively select and swap function arguments, list elements, and more. Powered by tree-sitter.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "Wansmer/sibling-swap.nvim",
    "url": "https://github.com/Wansmer/sibling-swap.nvim",
    "description": "Different way to swapping arguments and other siblings with Tree-Sitter.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "Wansmer/binary-swap.nvim",
    "url": "https://github.com/Wansmer/binary-swap.nvim",
    "description": "Swapping operands and operators in binary expressions: comparison and mathematical operations.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "nacro90/numb.nvim",
    "url": "https://github.com/nacro90/numb.nvim",
    "description": "Peek lines in a non-obtrusive way.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "ethanholz/nvim-lastplace",
    "url": "https://github.com/ethanholz/nvim-lastplace",
    "description": "Reopen files at your last edit position.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "Allendang/nvim-expand-expr",
    "url": "https://github.com/AllenDang/nvim-expand-expr",
    "description": "Expand and repeat expression to multiple lines.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "h-hg/fcitx.nvim",
    "url": "https://github.com/h-hg/fcitx.nvim",
    "description": "Switching and restoring fcitx state for each buffer separately.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "keaising/im-select.nvim",
    "url": "https://github.com/keaising/im-select.nvim",
    "description": "Switching and restoring input method automatically depends on Neovim's edit mode.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.trailspace",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-trailspace.md",
    "description": "Module of `mini.nvim` for automatic highlighting of trailing whitespace with functionality to remove it.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "smjonas/live-command.nvim",
    "url": "https://github.com/smjonas/live-command.nvim",
    "description": "Text editing with immediate visual feedback: preview commands such as `:norm`, `:g`, macros and more.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "filipdutescu/renamer.nvim",
    "url": "https://github.com/filipdutescu/renamer.nvim",
    "description": "VS Code-like renaming UI, written in Lua.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "gbprod/cutlass.nvim",
    "url": "https://github.com/gbprod/cutlass.nvim",
    "description": "Plugin that adds a 'cut' operation separate from 'delete'.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "gbprod/substitute.nvim",
    "url": "https://github.com/gbprod/substitute.nvim",
    "description": "Neovim plugin introducing a new operator motions to quickly replace and exchange text.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "gbprod/yanky.nvim",
    "url": "https://github.com/gbprod/yanky.nvim",
    "description": "Improved Yank and Put functionalities.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "sQVe/sort.nvim",
    "url": "https://github.com/sQVe/sort.nvim",
    "description": "Sorting plugin that intelligently supports line-wise and delimiter sorting.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "booperlv/nvim-gomove",
    "url": "https://github.com/booperlv/nvim-gomove",
    "description": "A complete plugin for moving and duplicating blocks and lines, with complete fold handling, reindenting, and undoing in one go.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "willothy/moveline.nvim",
    "url": "https://github.com/willothy/moveline.nvim",
    "description": "Move lines and blocks up and down easily, with indenting handled automatically as you move. Written in Rust.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.move",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-move.md",
    "description": "Module of `mini.nvim` to move any selection (charwise, linewise, blockwise, current line in Normal mode) in any direction. Handles both `v:count` and undo history.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "anuvyklack/pretty-fold.nvim",
    "url": "https://github.com/anuvyklack/pretty-fold.nvim",
    "description": "Foldtext customization.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "bennypowers/nvim-regexplainer",
    "url": "https://github.com/bennypowers/nvim-regexplainer",
    "description": "Explain the regular expression under the cursor.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "gbprod/stay-in-place.nvim",
    "url": "https://github.com/gbprod/stay-in-place.nvim",
    "description": "Neovim plugin that prevent cursor from moving when using shift and filter actions.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.ai",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-ai.md",
    "description": "Module of `mini.nvim` for extending and creating `a`/`i` textobjects. It enhances some builtin textobjects, creates extensive set of new ones (like `a*`, `a<Space>`, `a?`, and more), and allows user to create their own (via Lua patterns or functions). Supports dot-repeat, different search methods, consecutive application, and more.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "Wansmer/treesj",
    "url": "https://github.com/Wansmer/treesj",
    "description": "Splitting/joining blocks of code like arrays, hashes, statements, objects, dictionaries, etc. Using Tree-Sitter. Inspired by greatest splitjoin.vim.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "bennypowers/splitjoin.nvim",
    "url": "https://github.com/bennypowers/splitjoin.nvim",
    "description": "Split and join various syntax structures.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.splitjoin",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-splitjoin.md",
    "description": "Module of `mini.nvim` to split and join arguments. Has customizable pre and post hooks. Works inside comments.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "shortcuts/no-neck-pain.nvim",
    "url": "https://github.com/shortcuts/no-neck-pain.nvim",
    "description": "Center the currently focused buffer to the middle of your terminal.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "debugloop/telescope-undo.nvim",
    "url": "https://github.com/debugloop/telescope-undo.nvim",
    "description": "A telescope extension to visualize your undo tree and fuzzy-search changes in it.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "chrisgrieser/nvim-various-textobjs",
    "url": "https://github.com/chrisgrieser/nvim-various-textobjs",
    "description": "Bundle of about a dozen custom text objects.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "XXiaoA/ns-textobject.nvim",
    "url": "https://github.com/XXiaoA/ns-textobject.nvim",
    "description": "Awesome textobject plugin works with nvim-surround.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "~nedia/auto-save.nvim",
    "url": "https://git.sr.ht/~nedia/auto-save.nvim",
    "description": "Extremely simple auto saving on `InsertLeave` & `TextChanged`. Based on Pocco81/AutoSave but lighter.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.basics",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-basics.md",
    "description": "Module of `mini.nvim` with customizable configuration presets for common options, mappings, and autocommands.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "niuiic/part-edit.nvim",
    "url": "https://github.com/niuiic/part-edit.nvim",
    "description": "Edit a part of a file individually.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "niuiic/divider.nvim",
    "url": "https://github.com/niuiic/divider.nvim",
    "description": "Custom code divider line.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "chrisgrieser/nvim-alt-substitute",
    "url": "https://github.com/chrisgrieser/nvim-alt-substitute",
    "description": "A substitute of vim's `:substitute` that uses Lua patterns instead of vim regex. Supports incremental preview.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "ckolkey/ts-node-action",
    "url": "https://github.com/ckolkey/ts-node-action",
    "description": "A framework for executing functional transformations on Tree-sitter nodes - Has a lot of built-in actions for transforming text.",
    "tags": ["editing support"],
    "stars": 0
  },
  {
    "name": "numToStr/Comment.nvim",
    "url": "https://github.com/numToStr/Comment.nvim",
    "description": "Smart and Powerful comment plugin. Supports commentstring, motions, dot-repeat and more.",
    "tags": ["editing support", "comment"],
    "stars": 0
  },
  {
    "name": "b3nj5m1n/kommentary",
    "url": "https://github.com/b3nj5m1n/kommentary",
    "description": "Commenting plugin written in Lua.",
    "tags": ["editing support", "comment"],
    "stars": 0
  },
  {
    "name": "gennaro-tedesco/nvim-commaround",
    "url": "https://github.com/gennaro-tedesco/nvim-commaround",
    "description": "Fast and light commenting plugin written in Lua.",
    "tags": ["editing support", "comment"],
    "stars": 0
  },
  {
    "name": "folke/todo-comments.nvim",
    "url": "https://github.com/folke/todo-comments.nvim",
    "description": "Highlight, list and search todo comments in your projects.",
    "tags": ["editing support", "comment"],
    "stars": 0
  },
  {
    "name": "terrortylor/nvim-comment",
    "url": "https://github.com/terrortylor/nvim-comment",
    "description": "Toggle comments using the built-in commentstring option.",
    "tags": ["editing support", "comment"],
    "stars": 0
  },
  {
    "name": "winston0410/commented.nvim",
    "url": "https://github.com/winston0410/commented.nvim",
    "description": "A commenting plugin that supports counts and multiple comment patterns and much more.",
    "tags": ["editing support", "comment"],
    "stars": 0
  },
  {
    "name": "s1n7ax/nvim-comment-frame",
    "url": "https://github.com/s1n7ax/nvim-comment-frame",
    "description": "Adds a comment frame based on the source file.",
    "tags": ["editing support", "comment"],
    "stars": 0
  },
  {
    "name": "danymat/neogen",
    "url": "https://github.com/danymat/neogen",
    "description": "A better annotation generator. Supports multiple languages and annotation conventions.",
    "tags": ["editing support", "comment"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.comment",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-comment.md",
    "description": "Module of `mini.nvim` for per-line commenting. Fully supports dot-repeat.",
    "tags": ["editing support", "comment"],
    "stars": 0
  },
  {
    "name": "LudoPinelli/comment-box.nvim",
    "url": "https://github.com/LudoPinelli/comment-box.nvim",
    "description": "Clarify and beautify your comments using boxes and lines.",
    "tags": ["editing support", "comment"],
    "stars": 0
  },
  {
    "name": "JoosepAlviste/nvim-ts-context-commentstring",
    "url": "https://github.com/JoosepAlviste/nvim-ts-context-commentstring",
    "description": "Sets the `commentstring` option based on the cursor location in the file. The location is checked via treesitter queries.",
    "tags": ["editing support", "comment"],
    "stars": 0
  },
  {
    "name": "LucasTavaresA/SingleComment.nvim",
    "url": "https://github.com/LucasTavaresA/SingleComment.nvim",
    "description": "Always single line, comment sensitive, indentation preserving commenting.",
    "tags": ["editing support", "comment"],
    "stars": 0
  },
  {
    "name": "gpanders/editorconfig.nvim",
    "url": "https://github.com/gpanders/editorconfig.nvim",
    "description": "An EditorConfig plugin written in Fennel.",
    "tags": ["formatting"],
    "stars": 0
  },
  {
    "name": "mhartington/formatter.nvim",
    "url": "https://github.com/mhartington/formatter.nvim",
    "description": "A format runner written in Lua.",
    "tags": ["formatting"],
    "stars": 0
  },
  {
    "name": "lukas-reineke/lsp-format.nvim",
    "url": "https://github.com/lukas-reineke/lsp-format.nvim",
    "description": "A wrapper around Neovims native LSP formatting.",
    "tags": ["formatting"],
    "stars": 0
  },
  {
    "name": "sbdchd/neoformat",
    "url": "https://github.com/sbdchd/neoformat",
    "description": "A (Neo)vim plugin for formatting code.",
    "tags": ["formatting"],
    "stars": 0
  },
  {
    "name": "cappyzawa/trim.nvim",
    "url": "https://github.com/cappyzawa/trim.nvim",
    "description": "This plugin trims trailing whitespace and lines.",
    "tags": ["formatting"],
    "stars": 0
  },
  {
    "name": "mcauley-penney/tidy.nvim",
    "url": "https://github.com/mcauley-penney/tidy.nvim",
    "description": "Clear trailing whitespace and empty lines at end of file on every save.",
    "tags": ["formatting"],
    "stars": 0
  },
  {
    "name": "MunifTanjim/prettier.nvim",
    "url": "https://github.com/MunifTanjim/prettier.nvim",
    "description": "Prettier integration.",
    "tags": ["formatting"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.align",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-align.md",
    "description": "Module of `mini.nvim` for aligning text interactively (with or without instant preview).",
    "tags": ["formatting"],
    "stars": 0
  },
  {
    "name": "emileferreira/nvim-strict",
    "url": "https://github.com/emileferreira/nvim-strict",
    "description": "Strict, native code style formatting which exposes deep nesting, overlong lines, trailing whitespace, trailing empty lines, todos and inconsistent indentation.",
    "tags": ["formatting"],
    "stars": 0
  },
  {
    "name": "~nedia/auto-format.nvim",
    "url": "https://git.sr.ht/~nedia/auto-format.nvim",
    "description": "Does no formatting by itself, but sets up an autocmd to format on save, preferring null-ls over LSP client formatting.",
    "tags": ["formatting"],
    "stars": 0
  },
  {
    "name": "tenxsoydev/tabs-vs-spaces.nvim",
    "url": "https://github.com/tenxsoydev/tabs-vs-spaces.nvim",
    "description": "Hint and fix deviating indentation.",
    "tags": ["formatting"],
    "stars": 0
  },
  {
    "name": "nvimdev/indentmini.nvim",
    "url": "https://github.com/nvimdev/indentmini.nvim",
    "description": "A minimal and blazing fast indentline plugin by using nvim_set_decoration_provide api.",
    "tags": ["formatting", "indent"],
    "stars": 0
  },
  {
    "name": "lukas-reineke/indent-blankline.nvim",
    "url": "https://github.com/lukas-reineke/indent-blankline.nvim",
    "description": "IndentLine replacement in Lua with more features and treesitter support.",
    "tags": ["formatting", "indent"],
    "stars": 0
  },
  {
    "name": "LucasTavaresA/simpleIndentGuides.nvim",
    "url": "https://github.com/LucasTavaresA/simpleIndentGuides.nvim",
    "description": "Indentation guides using the builtin variables.",
    "tags": ["formatting", "indent"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.indentscope",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-indentscope.md",
    "description": "Module of `mini.nvim` for visualizing and operating on indent scope. Supports customization of debounce delay, animation style, and different granularity of options for scope computing algorithm.",
    "tags": ["formatting", "indent"],
    "stars": 0
  },
  {
    "name": "NMAC427/guess-indent.nvim",
    "url": "https://github.com/NMAC427/guess-indent.nvim",
    "description": "Automatic indentation style detection.",
    "tags": ["formatting", "indent"],
    "stars": 0
  },
  {
    "name": "Darazaki/indent-o-matic",
    "url": "https://github.com/Darazaki/indent-o-matic",
    "description": "Dumb automatic fast indentation detection written in Lua.",
    "tags": ["formatting", "indent"],
    "stars": 0
  },
  {
    "name": "Abstract-IDE/penvim",
    "url": "https://github.com/Abstract-IDE/penvim",
    "description": "Project's root directory and documents Indentation detector with project based config loader.",
    "tags": ["formatting", "indent"],
    "stars": 0
  },
  {
    "name": "yaocccc/nvim-hlchunk",
    "url": "https://github.com/yaocccc/nvim-hlchunk",
    "description": "Highlight a `{}` chunk.",
    "tags": ["formatting", "indent"],
    "stars": 0
  },
  {
    "name": "shellRaining/hlchunk.nvim",
    "url": "https://github.com/shellRaining/hlchunk.nvim",
    "description": "A Lua implementation of `nvim-hlchunk`, contains more features, such as highlight `{}` chunk, indent line, space blank etc.",
    "tags": ["formatting", "indent"],
    "stars": 0
  },
  {
    "name": "notomo/cmdbuf.nvim",
    "url": "https://github.com/notomo/cmdbuf.nvim",
    "description": "Alternative command-line-window plugin.",
    "tags": ["command line"],
    "stars": 0
  },
  {
    "name": "gelguy/wilder.nvim",
    "url": "https://github.com/gelguy/wilder.nvim",
    "description": "A plugin for fuzzy command line autocompletion.",
    "tags": ["command line"],
    "stars": 0
  },
  {
    "name": "rmagatti/auto-session",
    "url": "https://github.com/rmagatti/auto-session",
    "description": "A small automated session manager.",
    "tags": ["session"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.sessions",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-sessions.md",
    "description": "Module of `mini.nvim` for session management (read, write, delete).",
    "tags": ["session"],
    "stars": 0
  },
  {
    "name": "gennaro-tedesco/nvim-possession",
    "url": "https://github.com/gennaro-tedesco/nvim-possession",
    "description": "The no-nonsense session manager.",
    "tags": ["session"],
    "stars": 0
  },
  {
    "name": "olimorris/persisted.nvim",
    "url": "https://github.com/olimorris/persisted.nvim",
    "description": "Simple session management with git branching, autosave/autoload and Telescope support.",
    "tags": ["session"],
    "stars": 0
  },
  {
    "name": "Shatur/neovim-session-manager",
    "url": "https://github.com/Shatur/neovim-session-manager",
    "description": "A simple wrapper around :mksession.",
    "tags": ["session"],
    "stars": 0
  },
  {
    "name": "jedrzejboczar/possession.nvim",
    "url": "https://github.com/jedrzejboczar/possession.nvim",
    "description": "Flexible session management with arbitrary persistent data stored as JSON.",
    "tags": ["session"],
    "stars": 0
  },
  {
    "name": "niuiic/multiple-session.nvim",
    "url": "https://github.com/niuiic/multiple-session.nvim",
    "description": "Provides multi-session management capabilities.",
    "tags": ["session"],
    "stars": 0
  },
  {
    "name": "RutaTang/spectacle.nvim",
    "url": "https://github.com/RutaTang/spectacle.nvim",
    "description": "Easily manage multiple sessions with telescope integration.",
    "tags": ["session"],
    "stars": 0
  },
  {
    "name": "chipsenkbeil/distant.nvim",
    "url": "https://github.com/chipsenkbeil/distant.nvim",
    "description": "Edit files, run programs, and work with LSP on a remote machine from the comfort of your local environment.",
    "tags": ["remote development"],
    "stars": 0
  },
  {
    "name": "jamestthompson3/nvim-remote-containers",
    "url": "https://github.com/jamestthompson3/nvim-remote-containers",
    "description": "Develop inside docker containers, just like VSCode.",
    "tags": ["remote development"],
    "stars": 0
  },
  {
    "name": "esensar/nvim-dev-container",
    "url": "https://github.com/esensar/nvim-dev-container",
    "description": "Neovim devcontainer.json and general development container support.",
    "tags": ["remote development"],
    "stars": 0
  },
  {
    "name": "miversen33/netman.nvim",
    "url": "https://github.com/miversen33/netman.nvim",
    "description": "Lua powered Network Resource Manager.",
    "tags": ["remote development"],
    "stars": 0
  },
  {
    "name": "OscarCreator/rsync.nvim",
    "url": "https://github.com/OscarCreator/rsync.nvim",
    "description": "Automatically sync up/down project to a remote with rsync.",
    "tags": ["remote development"],
    "stars": 0
  },
  {
    "name": "~henriquehbr/ataraxis.lua",
    "url": "https://sr.ht/~henriquehbr/ataraxis.lua",
    "description": "A zen mode for improving code readability on Neovim.",
    "tags": ["split and window"],
    "stars": 0
  },
  {
    "name": "gitlab.com/yorickpeterse/nvim-window",
    "url": "https://gitlab.com/yorickpeterse/nvim-window",
    "description": "Easily jump between Neovim windows.",
    "tags": ["split and window"],
    "stars": 0
  },
  {
    "name": "sindrets/winshift.nvim",
    "url": "https://github.com/sindrets/winshift.nvim",
    "description": "Rearrange your windows with ease.",
    "tags": ["split and window"],
    "stars": 0
  },
  {
    "name": "beauwilliams/focus.nvim",
    "url": "https://github.com/beauwilliams/focus.nvim",
    "description": "Auto-Focusing and Auto-Resizing Splits/Windows written in Lua! Vim splits on steroids.",
    "tags": ["split and window"],
    "stars": 0
  },
  {
    "name": "anuvyklack/windows.nvim",
    "url": "https://github.com/anuvyklack/windows.nvim",
    "description": "Automatically expand width of the current window. Maximizes and restore it. And all this with nice animations!",
    "tags": ["split and window"],
    "stars": 0
  },
  {
    "name": "nvim-zh/colorful-winsep.nvim",
    "url": "https://github.com/nvim-zh/colorful-winsep.nvim",
    "description": "A configurable color split line.",
    "tags": ["split and window"],
    "stars": 0
  },
  {
    "name": "nyngwang/NeoNoName.lua",
    "url": "https://github.com/nyngwang/NeoNoName.lua",
    "description": "Layout preserving buffer deletion.",
    "tags": ["split and window"],
    "stars": 0
  },
  {
    "name": "famiu/bufdelete.nvim",
    "url": "https://github.com/famiu/bufdelete.nvim",
    "description": "Delete Neovim buffers without losing your window layout.",
    "tags": ["split and window"],
    "stars": 0
  },
  {
    "name": "echasnovski/mini.nvim#mini.bufremove",
    "url": "https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-bufremove.md",
    "description": "Module of `mini.nvim` for buffer removing (unshow, delete, wipeout) while saving window layout.",
    "tags": ["split and window"],
    "stars": 0
  },
  {
    "name": "aserowy/tmux.nvim",
    "url": "https://github.com/aserowy/tmux.nvim",
    "description": "Tmux integration features pane movement and resizing.",
    "tags": ["split and window", "tmux"],
    "stars": 0
  },
  {
    "name": "danielpieper/telescope-tmuxinator.nvim",
    "url": "https://github.com/danielpieper/telescope-tmuxinator.nvim",
    "description": "Integration for tmuxinator with telescope.nvim.",
    "tags": ["split and window", "tmux"],
    "stars": 0
  },
  {
    "name": "hkupty/nvimux",
    "url": "https://github.com/hkupty/nvimux",
    "description": "Neovim as tmux replacement.",
    "tags": ["split and window", "tmux"],
    "stars": 0
  },
  {
    "name": "numToStr/Navigator.nvim",
    "url": "https://github.com/numToStr/Navigator.nvim",
    "description": "Smoothly navigate between Neovim splits and Tmux panes.",
    "tags": ["split and window", "tmux"],
    "stars": 0
  },
  {
    "name": "declancm/windex.nvim",
    "url": "https://github.com/declancm/windex.nvim",
    "description": "Collection of window functions which includes moving between, closing and maximizing Neovim splits and Tmux panes.",
    "tags": ["split and window", "tmux"],
    "stars": 0
  },
  {
    "name": "otavioschwanck/tmux-awesome-manager.nvim",
    "url": "https://github.com/otavioschwanck/tmux-awesome-manager.nvim",
    "description": "Run your workflow commands like yarn install, rails console, yarn add, bundle install, etc.",
    "tags": ["split and window", "tmux"],
    "stars": 0
  },
  {
    "name": "ThePrimeagen/vim-be-good",
    "url": "https://github.com/ThePrimeagen/vim-be-good",
    "description": "Vim-be-good is a Neovim plugin designed to make you better at Vim Movements.",
    "tags": ["game"],
    "stars": 0
  },
  {
    "name": "alec-gibson/nvim-tetris",
    "url": "https://github.com/alec-gibson/nvim-tetris",
    "description": "Bringing emacs' greatest feature to Neovim - Tetris!.",
    "tags": ["game"],
    "stars": 0
  },
  {
    "name": "seandewar/nvimesweeper",
    "url": "https://github.com/seandewar/nvimesweeper",
    "description": "Play Minesweeper in your favourite text editor.",
    "tags": ["game"],
    "stars": 0
  },
  {
    "name": "seandewar/killersheep.nvim",
    "url": "https://github.com/seandewar/killersheep.nvim",
    "description": "Neovim port of killersheep.",
    "tags": ["game"],
    "stars": 0
  },
  {
    "name": "rktjmp/shenzhen-solitaire.nvim",
    "url": "https://github.com/rktjmp/shenzhen-solitaire.nvim",
    "description": "Shenzhen I/O Solitaire port.",
    "tags": ["game"],
    "stars": 0
  },
  {
    "name": "Eandrju/cellular-automaton.nvim",
    "url": "https://github.com/Eandrju/cellular-automaton.nvim",
    "description": "It lets you execute aesthetically pleasing, cellular automaton animations based on the content of Neovim buffer.",
    "tags": ["game"],
    "stars": 0
  },
  {
    "name": "alanfortlink/blackjack.nvim",
    "url": "https://github.com/alanfortlink/blackjack.nvim",
    "description": "Classic Black Jack game.",
    "tags": ["game"],
    "stars": 0
  },
  {
    "name": "jim-fx/sudoku.nvim",
    "url": "https://github.com/jim-fx/sudoku.nvim",
    "description": "Classic sudoku puzzle.",
    "tags": ["game"],
    "stars": 0
  },
  {
    "name": "p00f/cphelper.nvim",
    "url": "https://github.com/p00f/cphelper.nvim",
    "description": "Neovim helper for competitive programming written in Lua.",
    "tags": ["game", "competitive programming"],
    "stars": 0
  },
  {
    "name": "xeluxee/competitest.nvim",
    "url": "https://github.com/xeluxee/competitest.nvim",
    "description": "A plugin to automate testcases management and checking for Competitive Programming contests.",
    "tags": ["game", "competitive programming"],
    "stars": 0
  },
  {
    "name": "Dhanus3133/Leetbuddy.nvim",
    "url": "https://github.com/Dhanus3133/Leetbuddy.nvim",
    "description": "Solve Leetcode problems within Neovim.",
    "tags": ["game", "competitive programming"],
    "stars": 0
  },
  {
    "name": "m4xshen/hardtime.nvim",
    "url": "https://github.com/m4xshen/hardtime.nvim",
    "description": "Helping you establish good command workflow and habit.",
    "tags": ["workflow"],
    "stars": 0
  },
  {
    "name": "antonk52/bad-practices.nvim",
    "url": "https://github.com/antonk52/bad-practices.nvim",
    "description": "Helping you give up bad practices in Vim.",
    "tags": ["workflow"],
    "stars": 0
  },
  {
    "name": "Abstract-IDE/Abstract",
    "url": "https://github.com/Abstract-IDE/Abstract",
    "description": "Abstract, The Neovim configuration to achieve the power of Modern IDE.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "SpaceVim/SpaceVim",
    "url": "https://spacevim.org",
    "description": "A community-driven modular Vim/Neovim distribution, like spacemacs but for Vim/Neovim.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "CosmicNvim/CosmicNvim",
    "url": "https://github.com/CosmicNvim/CosmicNvim",
    "description": "CosmicNvim is a lightweight and opinionated Neovim config for web development, specifically designed to provide a üí´ COSMIC programming experience!",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "artart222/CodeArt",
    "url": "https://github.com/artart222/CodeArt",
    "description": "A fast general-purpose IDE written entirely in Lua with an installer for Linux/Windows/macOS and built in `:CodeArtUpdate` command for updating it.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "LazyVim/LazyVim",
    "url": "https://github.com/LazyVim/LazyVim",
    "description": "Full-fledged IDE powered by **lazy.nvim** to make it easy to customize and extend your config.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "NTBBloodbath/doom-nvim",
    "url": "https://github.com/NTBBloodbath/doom-nvim",
    "description": "Port of the doom-emacs framework, its goal is to add useful functions to Neovim to start working in a stable and efficient development environment without spending a lot of time configuring everything.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "crivotz/nv-ide",
    "url": "https://github.com/crivotz/nv-ide",
    "description": "Neovim custom configuration, oriented for full stack developers (rails, ruby, php, html, css, SCSS, JavaScript).",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "LunarVim/LunarVim",
    "url": "https://github.com/LunarVim/LunarVim",
    "description": "This project aims to help one transition away from VSCode, and into a superior text editing experience.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "hackorum/VapourNvim",
    "url": "https://github.com/hackorum/VapourNvim",
    "description": "A Neovim config for THE ULTIMATE Vim IDE-like experience.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "vi-tality/neovitality",
    "url": "https://github.com/vi-tality/neovitality",
    "description": "A full-featured Neovim distribution, packaged with Nix Flake for easy installation and reproducibility.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "siduck76/NvChad",
    "url": "https://github.com/siduck76/NvChad",
    "description": "An attempt to make Neovim cli as functional as an IDE while being very beautiful and less bloated.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "nvoid-lua/nvoid",
    "url": "https://github.com/nvoid-lua/nvoid",
    "description": "Simple Neovim config written in Lua with all the modern features available in any **IDE**",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "cstsunfu/.sea.nvim",
    "url": "https://github.com/cstsunfu/.sea.nvim",
    "description": "A modular Neovim configuration with beautiful UI and some useful features(Pomodoro Clock, Window Number).",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "shaeinst/roshnivim",
    "url": "https://github.com/shaeinst/roshnivim",
    "description": "Roshnivim, can be called neovim's distro, is a predefined configs so that you don't need 1000hr to setup neovim as an IDE.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "AstroNvim/AstroNvim",
    "url": "https://github.com/AstroNvim/AstroNvim",
    "description": "AstroNvim is an aesthetic and feature-rich Neovim config that is extensible and easy to use with a great set of plugins.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "shaunsingh/nyoom.nvim",
    "url": "https://github.com/shaunsingh/nyoom.nvim",
    "description": "Blazing fast, configurable, minimal and lispy neovim config written in Fennel. Base config for users to extend and add upon, leading to a more unique editing experience.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "OxygeNvim/OxygeNvim",
    "url": "https://github.com/OxygeNvim/OxygeNvim",
    "description": "A configuration for all kinds of development with rock solid defaults.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "jrychn/moduleVim",
    "url": "https://github.com/jrychn/ModuleVim",
    "description": "A very easy to use",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "askfiy/nvim",
    "url": "https://github.com/askfiy/nvim",
    "description": "An excellent Neovim configuration, which is as powerful as Vscode, is lightning fast ‚ö°Ô∏è.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "imbacraft/dusk.nvim",
    "url": "https://github.com/imbacraft/dusk.nvim",
    "description": "Dusk is a lightweight, aesthetically minimal Neovim config, written in Lua, able to provide for web and Java development.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "nvim-lua/kickstart.nvim",
    "url": "https://github.com/nvim-lua/kickstart.nvim",
    "description": "A launch point for your personal Neovim configuration.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "cunderw/nvim",
    "url": "https://github.com/cunderw/nvim",
    "description": "Neovim custom configuration, focused on JS/TS, Go, and Java development. Very IDE like.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "otavioschwanck/mood-nvim",
    "url": "https://github.com/otavioschwanck/mood-nvim",
    "description": "Ready to use configuration for Ruby on Rails, JavaScript and Typescript.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "ldelossa/nvim-ide",
    "url": "https://github.com/ldelossa/nvim-ide",
    "description": "A full featured IDE layer heavily inspired by VSCode.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "jonathandion/web-dev.nvim",
    "url": "https://github.com/jonathandion/web-dev.nvim",
    "description": "Small, simple and flexible configuration for web development ‚ú®.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "linrongbin16/lin.nvim",
    "url": "https://github.com/linrongbin16/lin.nvim",
    "description": "A highly configured Neovim distribution integrated with tons of utilities for development, inspired by spf13-vim.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "doctorfree/nvim-lazyman",
    "url": "https://github.com/doctorfree/nvim-lazyman",
    "description": "Neovim configuration manager and modular configuration, supports over 40 preconfigured configurations.",
    "tags": ["preconfigured configuration"],
    "stars": 0
  },
  {
    "name": "MordechaiHadad/bob",
    "url": "https://github.com/MordechaiHadad/bob",
    "description": "A cross platform and easy to use Neovim version manager.",
    "tags": ["external", "version manager"],
    "stars": 0
  },
  {
    "name": "NTBBloodbath/nvenv",
    "url": "https://github.com/NTBBloodbath/nvenv",
    "description": "A lightweight and blazing fast Neovim version manager.",
    "tags": ["external", "version manager"],
    "stars": 0
  },
  {
    "name": "shohi/neva",
    "url": "https://github.com/shohi/neva",
    "description": "A Neovim version manager written in Lua.",
    "tags": ["external", "version manager"],
    "stars": 0
  },
  {
    "name": "gennaro-tedesco/boilit",
    "url": "https://github.com/gennaro-tedesco/boilit",
    "description": "Create boilerplate structure plugins.",
    "tags": ["boilerplate"],
    "stars": 0
  },
  {
    "name": "m00qek/plugin-template.nvim",
    "url": "https://github.com/m00qek/plugin-template.nvim",
    "description": "A plugin template that setups test infrastructure and GitHub Actions.",
    "tags": ["boilerplate"],
    "stars": 0
  },
  {
    "name": "ellisonleao/nvim-plugin-template",
    "url": "https://github.com/ellisonleao/nvim-plugin-template",
    "description": "Another neovim plugin template, using GitHub's template feature.",
    "tags": ["boilerplate"],
    "stars": 0
  },
  {
    "name": "Vimawesome",
    "url": "https://vimawesome.com/",
    "description": "Showcases various plugins for Vim and has a [neovim tag](https://vimawesome.com/?q=tag:neovim) for other plugins targeting Neovim.",
    "tags": ["vim"],
    "stars": 0
  },
  {
    "name": "awesome-vim",
    "url": "https://github.com/akrawchyk/awesome-vim#tools",
    "description": "Short list of Vim plugins and helpful guides.",
    "tags": ["vim"],
    "stars": 0
  },
  {
    "name": "vim-plugin-list",
    "url": "https://github.com/altermo/vim-plugin-list",
    "description": "List of Vim and Neovim plugins.",
    "tags": ["vim"],
    "stars": 0
  },
  {
    "name": "Neovimcraft",
    "url": "https://neovimcraft.com",
    "description": "A site dedicated to searching specific plugins and guides for building plugins in Lua.",
    "tags": ["resource"],
    "stars": 0
  },
  {
    "name": "TWiN",
    "url": "https://this-week-in-neovim.org",
    "description": "TWiN (this-week-in-neovim.org) is dedicated to providing weekly news about Neovim and its ecosystem.",
    "tags": ["resource"],
    "stars": 0
  },
  {
    "name": "Dotfyle",
    "url": "https://dotfyle.com",
    "description": "Dotfyle is a site for sharing and discovering Neovim configs and plugins.",
    "tags": ["resource"],
    "stars": 0
  }
]
